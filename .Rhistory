xlab = "Correlation value",
ylab = "Frequency",
col = "salmon",
border = "white",
xlim = c(-1, 1)
)
par(mfrow = c(1, 1))
# Vector with indices of proteins, that show a near zero correlation between ctrl and rnase
near_zero_cors = which(abs(testing_cor_shifter$correlations) <= 0.01)
indices = near_zero_cors[1:5]
# Plotting some respective curves
for(i in indices) {
cs <- as.numeric(ctrl_main_shift[i, 1:25])
rs <- as.numeric(rnase_main_shift[i, 1:25])
# Plot
plot(cs,
type = "l",
main = paste("Protein at index", i),
xlab = "Fractions",
ylab = "Values",
col = "blue",
lwd = 2,
ylim = range(c(cs, rs)))
lines(rs,
type = "l",
col = "red",
lwd = 2)
}
# Vector with indices of proteins, that show a near one correlation between ctrl and rnase
near_one_cors = which(abs(testing_cor_no_shifter$correlations) >0.99)
indices = near_one_cors[1:5]
# Plotting some respective curves
for(i in indices) {
cs <- as.numeric(ctrl_no_main_shift[i, 1:25])
rs <- as.numeric(rnase_no_main_shift[i, 1:25])
# Plot
plot(cs,
type = "l",
main = paste("Protein at index", i),
xlab = "Fractions",
ylab = "Values",
col = "blue",
lwd = 2,
ylim = range(c(cs, rs)))
lines(rs,
type = "l",
col = "red",
lwd = 2)
}
# Vector with indices of proteins, that show a near one correlation between ctrl and rnase
near_one_cors_question = which(abs(testing_cor_shifter$correlations) >0.95)
indices = near_one_cors_question[1:5]
# Plotting a respective curves
for(i in indices) {
cs <- as.numeric(ctrl_main_shift[i, 1:25])
rs <- as.numeric(rnase_main_shift[i, 1:25])
# Plot
plot(cs,
type = "l",
main = paste("Protein at index", i),
xlab = "Fractions",
ylab = "Values",
col = "blue",
lwd = 2,
ylim = range(c(cs, rs)))
lines(rs,
type = "l",
col = "red",
lwd = 2)
}
# Calculate the absolute difference of the positions of the COM values between ctrl and rnase
diff_COM <- abs(ctrl_main_shift$COM - rnase_main_shift$COM)
# Indices of proteins with deviation â‰¥ 3 fractions
deviating_COM <- which(diff_COM >= 3)
# Apply on the data.frames
ctrl_COM_shift = ctrl_main_shift[deviating_COM, ]
rnase_COM_shift = rnase_main_shift[deviating_COM, ]
# ctrl/rnase_COM_shift contain 650 proteins
ctrl_no_COM_shift = ctrl_main_shift[!rownames(ctrl_main_shift) %in% rownames(ctrl_COM_shift), ]
rnase_no_COM_shift = rnase_main_shift[!rownames(rnase_main_shift) %in% rownames(rnase_COM_shift), ]
# Mean of the correlation values (ctrl vs. rnase) for those proteins whose main maximum is shifted by at least 2 fractions
COM_shifter = correlations(ctrl_COM_shift, rnase_COM_shift)
COM_shifter$mean_abs_correlation
# Mean of the correlation values (ctrl vs. rnase) for those proteins whose main maximum is not shifted by at least 2 fractions
COM_no_shifter = correlations(ctrl_no_COM_shift, rnase_no_COM_shift)
COM_no_shifter$mean_abs_correlation
par(mfrow = c(1, 2))
hist(
COM_shifter$correlations,
main = "Correlation values COM shifter",
xlab = "Correlation value",
ylab = "Frequency",
col = "skyblue",
border = "white",
xlim = c(-1, 1)
)
hist(
COM_no_shifter$correlations,
main = "Correlation values no COM shifter",
xlab = "Correlation value",
ylab = "Frequency",
col = "salmon",
border = "white",
xlim = c(-1, 1)
)
par(mfrow = c(1, 1))
# Vector with indices of proteins, that show a near zero correlation between ctrl and rnase
near_zero_cors = which(abs(COM_no_shifter$correlations) <= 0.1)
indices = near_zero_cors[1:5]
# Plotting respective curves
for(i in indices) {
cs <- as.numeric(ctrl_no_COM_shift[i, 1:25])
rs <- as.numeric(rnase_no_COM_shift[i, 1:25])
# Plot
plot(cs,
type = "l",
main = paste("Protein at index", i),
xlab = "Fractions",
ylab = "Values",
col = "blue",
lwd = 2,
ylim = range(c(cs, rs)))
lines(rs,
type = "l",
col = "red",
lwd = 2)
}
# Vector with indices of proteins, that show a near one correlation between ctrl and rnase
near_one_cors = which(abs(COM_no_shifter$correlations) >= 0.95)
indices = near_one_cors[1:5]
# Plotting a respective curves
for(i in indices) {
cs <- as.numeric(ctrl_no_COM_shift[i, 1:25])
rs <- as.numeric(rnase_no_COM_shift[i, 1:25])
# Plot
plot(cs,
type = "l",
main = paste("Protein at index", i),
xlab = "Fractions",
ylab = "Values",
col = "blue",
lwd = 2,
ylim = range(c(cs, rs)))
lines(rs,
type = "l",
col = "red",
lwd = 2)
}
hist(
COM_no_shifter$correlations,
main = "Correlation values no COM shifter",
xlab = "Correlation value",
ylab = "Frequency",
col = "salmon",
border = "white",
breaks = 50,
xlim = c(-1, 1)
)
abline(v = 0.7)
# Define threshold
threshold = 0.7
keep_indices = COM_no_shifter$correlations <= threshold
# New data.frames with the proteins, that might be RNA-dependent
ctrl_under_threshold = ctrl_no_COM_shift[keep_indices, ]
rnase_under_threshold = rnase_no_COM_shift[keep_indices, ]
# New data.frames with the proteins, that are not RNA-dependent by arbitrary choice
ctrl_above_threshold = ctrl_no_COM_shift[!keep_indices, ]
rnase_above_threshold = rnase_no_COM_shift[!keep_indices, ]
# Check, if the new data.frames have the same proteins in the same order
# sum(rownames(ctrl_under_threshold) == rownames(rnase_under_threshold))
# sum(rownames(ctrl_above_threshold) == rownames(rnase_above_threshold))
ctrl_selected = rbind(ctrl_COM_shift, ctrl_under_threshold)
rnase_selected = rbind(rnase_COM_shift, rnase_under_threshold)
sum(rownames(ctrl_selected) != rownames(rnase_selected))
ctrl_not_selected = rbind(ctrl_no_main_shift, ctrl_above_threshold)
rnase_not_selected = rbind(rnase_no_main_shift, rnase_above_threshold)
sum(rownames(ctrl_not_selected) != rownames(rnase_not_selected))
dim(ctrl_not_selected)[1] + dim(ctrl_selected)[1] == dim(ctrl_norm_mean)[1]
# Calculate mean values per row and form the difference
get_differences <- function(ctrl_df, rnase_df, ctrl_col, rnase_col) {
ctrl_means <- sapply(ctrl_df[[ctrl_col]], mean)
rnase_means <- sapply(rnase_df[[rnase_col]], mean)
return(ctrl_means - rnase_means)
}
# Calculate the difference vectors for both groups
diff_selected <- get_differences(ctrl_selected, rnase_selected, "combined_max_ctrl", "combined_max_rnase")
diff_not_selected <- get_differences(ctrl_not_selected, rnase_not_selected, "combined_max_ctrl", "combined_max_rnase")
# Wilcoxon Rank-Sum Test (unpaired)
wilcox_test_result <- wilcox.test(diff_selected, diff_not_selected)
# Show result
print(wilcox_test_result)
library(ggplot2)
# Vector with group membership
group <- c(rep("selected", length(diff_selected)), rep("not_selected", length(diff_not_selected)))
diffs <- c(diff_selected, diff_not_selected)
df_plot <- data.frame(Group = group, Difference = diffs)
ggplot(df_plot, aes(x = Group, y = Difference)) +
geom_violin(trim = FALSE, fill = "lightblue") +
geom_boxplot(width = 0.1, outlier.shape = NA) +
theme_minimal() +
labs(title = "distribution of the differences", y = "ctrl - rnase", x = "")
ggplot(df_plot, aes(x = Difference, fill = Group)) +
geom_density(alpha = 0.5) +
theme_minimal() +
labs(title = "density distribution of the differnces", x = "difference (ctrl - rnase)")
# Keep only numerical columns
pca_ctrl_numeric <- ctrl_selected[, sapply(ctrl_selected, is.numeric)][, 1:25]
pca_rnase_numeric <- rnase_selected[, sapply(rnase_selected, is.numeric)][, 1:25]
# Remove rows with NAs
pca_ctrl_clean <- pca_ctrl_numeric[complete.cases(pca_ctrl_numeric), ]
pca_rnase_clean <- pca_rnase_numeric[complete.cases(pca_rnase_numeric), ]
pca_result_ctrl <- prcomp(pca_ctrl_clean, center = TRUE, scale. = TRUE, )
pca_result_rnase <- prcomp(pca_rnase_clean, center = TRUE, scale. = TRUE)
# Keep only numerical columns
pca_ctrl_numeric_not_selected <- ctrl_not_selected[,sapply(ctrl_not_selected, is.numeric)][, 1:25]
pca_rnase_numeric_not_selected <- rnase_not_selected[,sapply(rnase_not_selected, is.numeric)][, 1:25]
# Remove rows with NAs
pca_ctrl_clean_not_selected <- pca_ctrl_numeric_not_selected[complete.cases(pca_ctrl_numeric_not_selected), ]
pca_rnase_clean_not_selected <- pca_rnase_numeric_not_selected[complete.cases(pca_rnase_numeric_not_selected), ]
pca_result_ctrl_not_selected <- prcomp(pca_ctrl_clean_not_selected, center = TRUE, scale. = TRUE, )
pca_result_rnase_not_selected <- prcomp(pca_rnase_clean_not_selected, center = TRUE, scale. = TRUE)
# Check which PCs have the most variance
summary(pca_result_ctrl)
summary(pca_result_rnase)
#plot PC1 with PC2
plot(pca_result_ctrl$x[,1:2], col = "blue", pch = 16,
xlab = "PC1", ylab = "PC2", main = "PCA: PC1 vs PC2 CTRL (SHIFT)")
plot(pca_result_rnase$x[,1:2], col = "blue", pch = 16,
xlab = "PC1", ylab = "PC2", main = "PCA: PC1 vs PC2 RNASE (SHIFT)")
#plot PC1 with PC3
plot(pca_result_ctrl$x[,c(1, 3)], col = "blue", pch = 16,
xlab = "PC1", ylab = "PC3", main = "PCA: PC1 vs PC3 CTRL (SHIFT)")
plot(pca_result_rnase$x[,c(1, 3)], col = "blue", pch = 16,
xlab = "PC1", ylab = "PC3", main = "PCA: PC1 vs PC3 RNASE (SHIFT)")
#plot PC2 with PC3
plot(pca_result_ctrl$x[,2:3], col = "blue", pch = 16,
xlab = "PC2", ylab = "PC3", main = "PCA: PC2 vs PC3 CTRL (SHIFT)")
plot(pca_result_rnase$x[,2:3], col = "blue", pch = 16,
xlab = "PC2", ylab = "PC3", main = "PCA: PC2 vs PC3 RNASE (SHIFT)")
# Simple 2D PCA-Plot
plot(pca_result_ctrl_not_selected$x[,1:2], col = "blue", pch = 16,
xlab = "PC1", ylab = "PC2", main = "PCA: PC1 vs PC2 CTRL (NO SHIFT)")
plot(pca_result_rnase_not_selected$x[,1:2], col = "blue", pch = 16,
xlab = "PC1", ylab = "PC2", main = "PCA: PC1 vs PC2 RNASE (NO SHIFT)")
#plot PC1 with PC3
plot(pca_result_ctrl_not_selected$x[,c(1, 3)], col = "blue", pch = 16,
xlab = "PC1", ylab = "PC3", main = "PCA: PC1 vs PC3 CTRL (NO SHIFT)")
plot(pca_result_rnase_not_selected$x[,c(1, 3)], col = "blue", pch = 16,
xlab = "PC1", ylab = "PC3", main = "PCA: PC1 vs PC3 RNASE (NO SHIFT)")
#plot PC2 with PC3
plot(pca_result_ctrl_not_selected$x[,2:3], col = "blue", pch = 16,
xlab = "PC2", ylab = "PC3", main = "PCA: PC2 vs PC3 CTRL (NO SHIFT)")
plot(pca_result_rnase_not_selected$x[,2:3], col = "blue", pch = 16,
xlab = "PC2", ylab = "PC3", main = "PCA: PC2 vs PC3 RNASE (NO SHIFT)")
#Recognize centers for k-means clustering -> 3 centers
plot(pca_result_ctrl, type = "l", main = "Elbow-Plot CTRL (SHIFT)")
plot(pca_result_rnase, type = "l", main = "Elbow-Plot RNASE (SHIFT)")
#Recognize centers for k-means clustering -> 2 centers
plot(pca_result_ctrl_not_selected, type = "l", main = "Elbow-Plot CTRL (NO SHIFT)")
plot(pca_result_rnase_not_selected, type = "l", main = "Elbow-Plot RNASE (NO SHIFT)")
pca_ctrl_pc1_pc2 <- as.data.frame(pca_result_ctrl$x[, 1:2])
pca_ctrl_pc1_pc3 <- as.data.frame(pca_result_ctrl$x[, c(1,3)])
pca_ctrl_pc2_pc3 <- as.data.frame(pca_result_ctrl$x[, 2:3])
pca_rnase_pc1_pc2 <- as.data.frame(pca_result_rnase$x[, 1:2])
pca_rnase_pc1_pc3 <- as.data.frame(pca_result_rnase$x[, c(1,3)])
pca_rnase_pc2_pc3 <- as.data.frame(pca_result_rnase$x[, 2:3])
pca_ctrl_pc1_pc2_not_selected <- as.data.frame(pca_result_ctrl_not_selected$x[, 1:2])
pca_ctrl_pc1_pc3_not_selected <- as.data.frame(pca_result_ctrl_not_selected$x[, c(1,3)])
pca_ctrl_pc2_pc3_not_selected <- as.data.frame(pca_result_ctrl_not_selected$x[, 2:3])
pca_rnase_pc1_pc2_not_selected <- as.data.frame(pca_result_rnase_not_selected$x[, 1:2])
pca_rnase_pc1_pc3_not_selected <- as.data.frame(pca_result_rnase_not_selected$x[, c(1,3)])
pca_rnase_pc2_pc3_not_selected <- as.data.frame(pca_result_rnase_not_selected$x[, 2:3])
library(factoextra)
fviz_nbclust(pca_ctrl_pc1_pc2, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode CTRL PC1/PC2") +
theme_minimal()
fviz_nbclust(pca_ctrl_pc1_pc3, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode CTRL PC1/PC2") +
theme_minimal()
fviz_nbclust(pca_ctrl_pc2_pc3, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode CTRL PC2/PC3") +
theme_minimal()
fviz_nbclust(pca_rnase_pc1_pc2, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode RNASE PC1/PC2") +
theme_minimal()
fviz_nbclust(pca_rnase_pc1_pc3, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode RNASE PC1/PC3") +
theme_minimal()
fviz_nbclust(pca_rnase_pc2_pc3, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode RNASE PC2/PC3") +
theme_minimal()
fviz_nbclust(pca_ctrl_pc1_pc2_not_selected, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode CTRL PC1/PC2") +
theme_minimal()
fviz_nbclust(pca_ctrl_pc1_pc3_not_selected, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode CTRL PC1/PC2") +
theme_minimal()
fviz_nbclust(pca_ctrl_pc2_pc3_not_selected, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode CTRL PC2/PC3") +
theme_minimal()
fviz_nbclust(pca_rnase_pc1_pc2_not_selected, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode RNASE PC1/PC2") +
theme_minimal()
fviz_nbclust(pca_rnase_pc1_pc3_not_selected, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode RNASE PC1/PC3") +
theme_minimal()
fviz_nbclust(pca_rnase_pc2_pc3_not_selected, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode RNASE PC2/PC3") +
theme_minimal()
#kmeans is executed with 3 centers --> see elbow-Plot and silhouette plot
km_result_ctrl_pc1_pc2<- kmeans(pca_ctrl_pc1_pc2, centers = 3)
km_result_ctrl_pc1_pc3<- kmeans(pca_ctrl_pc1_pc3, centers = 3)
km_result_ctrl_pc2_pc3<- kmeans(pca_ctrl_pc2_pc3, centers = 3)
km_result_rnase_pc1_pc2<- kmeans(pca_rnase_pc1_pc2, centers = 3)
km_result_rnase_pc1_pc3<- kmeans(pca_rnase_pc1_pc3, centers = 3)
km_result_rnase_pc2_pc3<- kmeans(pca_rnase_pc2_pc3, centers = 3)
#kmeans is executed with 2 centers
km_result_ctrl_pc1_pc2_not_selected<- kmeans(pca_ctrl_pc1_pc2_not_selected, centers = 3)
km_result_ctrl_pc1_pc3_not_selected<- kmeans(pca_ctrl_pc1_pc3_not_selected, centers = 3)
km_result_ctrl_pc2_pc3_not_selected<- kmeans(pca_ctrl_pc2_pc3_not_selected, centers = 3)
km_result_rnase_pc1_pc2_not_selected<- kmeans(pca_rnase_pc1_pc2_not_selected, centers = 3)
km_result_rnase_pc1_pc3_not_selected<- kmeans(pca_rnase_pc1_pc3_not_selected, centers = 3)
km_result_rnase_pc2_pc3_not_selected<- kmeans(pca_rnase_pc2_pc3_not_selected, centers = 3)
library(factoextra)
# pca_df contains the data, e.g. PC1 and PC2
fviz_cluster(km_result_ctrl_pc1_pc2, data = pca_ctrl_pc1_pc2,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = "jco", ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC2 CTRL (SHIFT)")
fviz_cluster(km_result_rnase_pc1_pc2, data = pca_rnase_pc1_pc2,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = "jco", ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC2 RNASE (SHIFT)")
fviz_cluster(km_result_ctrl_pc1_pc3, data = pca_ctrl_pc1_pc3,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = "jco", ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC3 CTRL (SHIFT)")
fviz_cluster(km_result_rnase_pc1_pc3, data = pca_rnase_pc1_pc3,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = "jco", ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC3 RNASE (SHIFT)")
fviz_cluster(km_result_ctrl_pc2_pc3, data = pca_ctrl_pc2_pc3,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = "jco", ggtheme = theme_minimal(),
main = "k-Means Cluster: PC2 vs PC3 CTRL (SHIFT)")
fviz_cluster(km_result_rnase_pc2_pc3, data = pca_rnase_pc2_pc3,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = "jco", ggtheme = theme_minimal(),
main = "k-Means Cluster: PC2 vs PC3 RNASE (SHIFT)")
# pca_df contains the data, e.g. PC1 and PC2
fviz_cluster(km_result_ctrl_pc1_pc2_not_selected, data = pca_ctrl_pc1_pc2_not_selected,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = "jco", ggtheme = theme_minimal(),
main = "k-Means Cluster der CTRL (NO SHIFT)")
fviz_cluster(km_result_rnase_pc1_pc2_not_selected, data = pca_rnase_pc1_pc2_not_selected,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = "jco", ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC2 RNASE (NO SHIFT)")
fviz_cluster(km_result_ctrl_pc1_pc3_not_selected, data = pca_ctrl_pc1_pc3_not_selected,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = "jco", ggtheme = theme_minimal(),
main = "k-Means Cluster der CTRL (NO SHIFT)")
fviz_cluster(km_result_rnase_pc1_pc3_not_selected, data = pca_rnase_pc1_pc3_not_selected,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = "jco", ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC3 RNASE (NO SHIFT)")
fviz_cluster(km_result_ctrl_pc2_pc3_not_selected, data = pca_ctrl_pc2_pc3_not_selected,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = "jco", ggtheme = theme_minimal(),
main = "k-Means Cluster der CTRL (NO SHIFT)")
fviz_cluster(km_result_rnase_pc2_pc3_not_selected, data = pca_rnase_pc2_pc3_not_selected,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = "jco", ggtheme = theme_minimal(),
main = "k-Means Cluster: PC2 vs PC3 RNASE (NO SHIFT)")
#For ctrl selected vs rnase selected
#Rename relevant variables to avoid PC name redundance later on
ctrl_1 <- pca_ctrl_pc1_pc2$PC1
ctrl_2 <- pca_ctrl_pc1_pc2$PC2
ctrl_3 <- pca_ctrl_pc1_pc3$PC3
rnase_1 <- pca_rnase_pc1_pc2$PC1
rnase_2 <- pca_rnase_pc1_pc2$PC2
rnase_3 <- pca_rnase_pc1_pc3$PC3
#Generates plot with PCA datapoints and draws a trendline through it
plot(ctrl_1,rnase_1,pch=20,col='blue', xlab='Ctrl selected PC1',ylab='Rnase selected PC1', main = "Ctrl selected PC1 vs Rnase selected PC1");abline(0,1,col='red')
plot(ctrl_1,rnase_2,pch=20,col='blue', xlab='Ctrl selected PC1',ylab='Rnase selected PC2', main = "Ctrl selected PC1 vs Rnase selected PC2");abline(0,1,col='red')
plot(ctrl_1,rnase_3,pch=20,col='blue', xlab='Ctrl selected PC1',ylab='Rnase selected PC3', main = "Ctrl selected PC1 vs Rnase selected PC3");abline(0,1,col='red')
plot(ctrl_2,rnase_1,pch=20,col='blue', xlab='Ctrl selected PC2',ylab='Rnase selected PC1', main = "Ctrl selected PC2 vs Rnase selected PC1");abline(0,1,col='red')
plot(ctrl_2,rnase_2,pch=20,col='blue', xlab='Ctrl selected PC2',ylab='Rnase selected PC2', main = "Ctrl selected PC2 vs Rnase selected PC2");abline(0,1,col='red')
plot(ctrl_2,rnase_3,pch=20,col='blue', xlab='Ctrl selected PC2',ylab='Rnase selected PC3', main = "Ctrl selected PC2 vs Rnase selected PC3");abline(0,1,col='red')
plot(ctrl_3,rnase_1,pch=20,col='blue', xlab='Ctrl selected PC3',ylab='Rnase selected PC1', main = "Ctrl selected PC3 vs Rnase selected PC1");abline(0,1,col='red')
plot(ctrl_3,rnase_2,pch=20,col='blue', xlab='Ctrl selected PC3',ylab='Rnase selected PC2', main = "Ctrl selected PC3 vs Rnase selected PC2");abline(0,1,col='red')
plot(ctrl_3,rnase_3,pch=20,col='blue', xlab='Ctrl selected PC3',ylab='Rnase selected PC3', main = "Ctrl selected PC3 vs Rnase selected PC3");abline(0,1,col='red')
#Defines a target variable, so what should be predicted by the regression analysis
target_selected <- ctrl_selected$global_maximum
#Builds matrix for regression analysis from target variable with two PCA components
df_regression_selected_11 <- cbind(target = target_selected ,
ctrl_1, rnase_1)
df_regression_selected_12 <- cbind(target = target_selected ,
ctrl_1, rnase_2)
df_regression_selected_13 <- cbind(target = target_selected ,
ctrl_1, rnase_3)
df_regression_selected_21 <- cbind(target = target_selected ,
ctrl_2, rnase_1)
df_regression_selected_22 <- cbind(target =target_selected,
ctrl_2, rnase_2)
df_regression_selected_23 <- cbind(target = target_selected ,
ctrl_2, rnase_3)
df_regression_selected_31 <- cbind(target = target_selected ,
ctrl_3, rnase_1)
df_regression_selected_32 <- cbind(target =target_selected ,
ctrl_3, rnase_2)
df_regression_selected_33 <- cbind(target = target_selected ,
ctrl_3, rnase_3)
#Make matrix a data frame
df_regression_selected_11 <- as.data.frame(df_regression_selected_11)
df_regression_selected_12 <- as.data.frame(df_regression_selected_12)
df_regression_selected_13 <- as.data.frame(df_regression_selected_13)
df_regression_selected_21 <- as.data.frame(df_regression_selected_21)
df_regression_selected_22 <- as.data.frame(df_regression_selected_22)
df_regression_selected_23 <- as.data.frame(df_regression_selected_23)
df_regression_selected_31 <- as.data.frame(df_regression_selected_31)
df_regression_selected_32 <- as.data.frame(df_regression_selected_32)
df_regression_selected_33 <- as.data.frame(df_regression_selected_33)
#Multiple linear regression analysis
model_selected_pc1_1<- lm(target ~ ctrl_1 + rnase_1, data = df_regression_selected_11)
model_selected_pc1_2<- lm(target ~ctrl_1 + rnase_2, data = df_regression_selected_12)
model_selected_pc1_3<- lm(target ~ ctrl_1 + rnase_3, data = df_regression_selected_13)
model_selected_pc2_1<- lm(target ~ ctrl_2 + rnase_1, data = df_regression_selected_21)
model_selected_pc2_2<- lm(target ~ ctrl_2 + rnase_2, data = df_regression_selected_22)
model_selected_pc2_3<- lm(target ~ ctrl_2 + rnase_3, data = df_regression_selected_23)
model_selected_pc3_1<- lm(target ~ ctrl_3 + rnase_1, data = df_regression_selected_31)
model_selected_pc3_2<- lm(target ~ ctrl_3 + rnase_2, data = df_regression_selected_32)
model_selected_pc3_3<- lm(target ~ ctrl_3 + rnase_3, data = df_regression_selected_33)
#Show results/summary
summary(model_selected_pc1_1)
summary(model_selected_pc1_2)
summary(model_selected_pc1_3)
summary(model_selected_pc2_1)
summary(model_selected_pc2_2)
summary(model_selected_pc2_3)
summary(model_selected_pc3_1)
summary(model_selected_pc3_2)
summary(model_selected_pc3_3)
#For ctrl not-selected vs rnase not-selected
#Rename relevant variables to avoid PC name redundance later on
ctrl_ns_1 <- pca_ctrl_pc1_pc2_not_selected$PC1
ctrl_ns_2 <- pca_ctrl_pc1_pc2_not_selected$PC2
ctrl_ns_3 <- pca_ctrl_pc1_pc3_not_selected$PC3
rnase_ns_1 <- pca_rnase_pc1_pc2_not_selected$PC1
rnase_ns_2 <- pca_rnase_pc1_pc2_not_selected$PC2
rnase_ns_3 <- pca_rnase_pc1_pc3_not_selected$PC3
#Generates plot with PCA datapoints and draws a trendline through it
plot(ctrl_ns_1,rnase_ns_1,pch=20,col='blue', xlab='Ctrl not-selected PC1',ylab='Rnase not-selected PC1', main = "Ctrl not-selected PC1 vs Rnase not-selected PC1");abline(0,1,col='red')
plot(ctrl_ns_1,rnase_ns_2,pch=20,col='blue', xlab='Ctrl not-selected PC1',ylab='Rnase not-selected PC2', main = "Ctrl not-selected PC1 vs Rnase not-selected PC2");abline(0,1,col='red')
plot(ctrl_ns_1,rnase_ns_3,pch=20,col='blue', xlab='Ctrl not-selected PC1',ylab='Rnase not-selected PC3', main = "Ctrl not-selected PC1 vs Rnase not-selected PC3");abline(0,1,col='red')
plot(ctrl_ns_2,rnase_ns_1,pch=20,col='blue', xlab='Ctrl not-selected PC2',ylab='Rnase not-selected PC1', main = "Ctrl not-selected PC2 vs Rnase not-selected PC1");abline(0,1,col='red')
plot(ctrl_ns_2,rnase_ns_2,pch=20,col='blue', xlab='Ctrl not-selected PC2',ylab='Rnase not-selected PC2', main = "Ctrl not-selected PC2 vs Rnase not-selected PC2");abline(0,1,col='red')
plot(ctrl_ns_2,rnase_ns_3,pch=20,col='blue', xlab='Ctrl not-selected PC2',ylab='Rnase not-selected PC3', main = "Ctrl not-selected PC2 vs Rnase not-selected PC3");abline(0,1,col='red')
plot(ctrl_ns_3,rnase_ns_1,pch=20,col='blue', xlab='Ctrl not-selected PC3',ylab='Rnase not-selected PC1', main = "Ctrl not-selected PC3 vs Rnase not-selected PC1");abline(0,1,col='red')
plot(ctrl_ns_3,rnase_ns_2,pch=20,col='blue', xlab='Ctrl not-selected PC3',ylab='Rnase not-selected PC2', main = "Ctrl not-selected PC3 vs Rnase not-selected PC2");abline(0,1,col='red')
plot(ctrl_ns_3,rnase_ns_3,pch=20,col='blue', xlab='Ctrl not-selected PC3',ylab='Rnase not-selected PC3', main = "Ctrl not-selected PC3 vs Rnase not-selected PC3");abline(0,1,col='red')
#Defines a target variable, so what should be predicted by the regression analysis
target_not_selected <- ctrl_not_selected$global_maximum
#Builds matrix for regression analysis from target variable with two PCA components
df_regression_not_selected_11 <- cbind(target = target_not_selected ,
ctrl_ns_1, rnase_ns_1)
df_regression_not_selected_12 <- cbind(target = target_not_selected ,
ctrl_ns_1, rnase_ns_2)
df_regression_not_selected_13 <- cbind(target = target_not_selected ,
ctrl_ns_1, rnase_ns_3)
df_regression_not_selected_21 <- cbind(target = target_not_selected ,
ctrl_ns_2, rnase_ns_1)
df_regression_not_selected_22 <- cbind(target =target_not_selected,
ctrl_ns_2, rnase_ns_2)
df_regression_not_selected_23 <- cbind(target = target_not_selected ,
ctrl_ns_2, rnase_ns_3)
df_regression_not_selected_31 <- cbind(target = target_not_selected ,
ctrl_ns_3, rnase_ns_1)
df_regression_not_selected_32 <- cbind(target =target_not_selected ,
ctrl_ns_3, rnase_ns_2)
df_regression_not_selected_33 <- cbind(target = target_not_selected ,
ctrl_ns_3, rnase_ns_3)
#Make matrix a data frame
df_regression_not_selected_11 <- as.data.frame(df_regression_not_selected_11)
df_regression_not_selected_12 <- as.data.frame(df_regression_not_selected_12)
df_regression_not_selected_13 <- as.data.frame(df_regression_not_selected_13)
df_regression_not_selected_21 <- as.data.frame(df_regression_not_selected_21)
df_regression_not_selected_22 <- as.data.frame(df_regression_not_selected_22)
df_regression_not_selected_23 <- as.data.frame(df_regression_not_selected_23)
df_regression_not_selected_31 <- as.data.frame(df_regression_not_selected_31)
df_regression_not_selected_32 <- as.data.frame(df_regression_not_selected_32)
df_regression_not_selected_33 <- as.data.frame(df_regression_not_selected_33)
#Multiple linear regression analysis
model_not_selected_pc1_1<- lm(target ~ ctrl_ns_1 + rnase_ns_1, data = df_regression_not_selected_11)
model_not_selected_pc1_2<- lm(target ~ctrl_ns_1 + rnase_ns_2, data = df_regression_not_selected_12)
model_not_selected_pc1_3<- lm(target ~ ctrl_ns_1 + rnase_ns_3, data = df_regression_not_selected_13)
model_not_selected_pc2_1<- lm(target ~ ctrl_ns_2 + rnase_ns_1, data = df_regression_not_selected_21)
model_not_selected_pc2_2<- lm(target ~ ctrl_ns_2 + rnase_ns_2, data = df_regression_not_selected_22)
model_not_selected_pc2_3<- lm(target ~ ctrl_ns_2 + rnase_ns_3, data = df_regression_not_selected_23)
model_not_selected_pc3_1<- lm(target ~ ctrl_ns_3 + rnase_ns_1, data = df_regression_not_selected_31)
model_not_selected_pc3_2<- lm(target ~ ctrl_ns_3 + rnase_ns_2, data = df_regression_not_selected_32)
model_not_selected_pc3_3<- lm(target ~ ctrl_ns_3 + rnase_ns_3, data = df_regression_not_selected_33)
#Show results/summary
summary(model_not_selected_pc1_1)
summary(model_not_selected_pc1_2)
summary(model_not_selected_pc1_3)
summary(model_not_selected_pc2_1)
summary(model_not_selected_pc2_2)
summary(model_not_selected_pc2_3)
summary(model_not_selected_pc3_1)
summary(model_not_selected_pc3_2)
summary(model_not_selected_pc3_3)
