fviz_nbclust(pca_ctrl_pc1_pc3, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode CTRL PC1/PC2") +
theme_minimal()
fviz_nbclust(pca_ctrl_pc2_pc3, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode CTRL PC2/PC3") +
theme_minimal()
fviz_nbclust(pca_rnase_pc1_pc2, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode RNASE PC1/PC2") +
theme_minimal()
fviz_nbclust(pca_rnase_pc1_pc3, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode RNASE PC1/PC3") +
theme_minimal()
fviz_nbclust(pca_rnase_pc2_pc3, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode RNASE PC2/PC3") +
theme_minimal()
fviz_nbclust(pca_ctrl_pc1_pc2_not_selected, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode CTRL PC1/PC2") +
theme_minimal()
fviz_nbclust(pca_ctrl_pc1_pc3_not_selected, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode CTRL PC1/PC2") +
theme_minimal()
fviz_nbclust(pca_ctrl_pc2_pc3_not_selected, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode CTRL PC2/PC3") +
theme_minimal()
fviz_nbclust(pca_rnase_pc1_pc2_not_selected, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode RNASE PC1/PC2") +
theme_minimal()
fviz_nbclust(pca_rnase_pc1_pc3_not_selected, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode RNASE PC1/PC3") +
theme_minimal()
fviz_nbclust(pca_rnase_pc2_pc3_not_selected, kmeans, method = "silhouette") +
labs(title = "Silhouette-Methode RNASE PC2/PC3") +
theme_minimal()
#kmeans is executed with 3 centers --> see elbow-Plot and silhouette plot
km_result_ctrl_pc1_pc2<- kmeans(pca_ctrl_pc1_pc2, centers = 3)
km_result_ctrl_pc1_pc3<- kmeans(pca_ctrl_pc1_pc3, centers = 3)
km_result_ctrl_pc2_pc3<- kmeans(pca_ctrl_pc2_pc3, centers = 3)
km_result_rnase_pc1_pc2<- kmeans(pca_rnase_pc1_pc2, centers = 3)
km_result_rnase_pc1_pc3<- kmeans(pca_rnase_pc1_pc3, centers = 3)
km_result_rnase_pc2_pc3<- kmeans(pca_rnase_pc2_pc3, centers = 3)
#kmeans is executed with 2 centers
km_result_ctrl_pc1_pc2_not_selected<- kmeans(pca_ctrl_pc1_pc2_not_selected, centers = 3)
km_result_ctrl_pc1_pc3_not_selected<- kmeans(pca_ctrl_pc1_pc3_not_selected, centers = 3)
km_result_ctrl_pc2_pc3_not_selected<- kmeans(pca_ctrl_pc2_pc3_not_selected, centers = 3)
km_result_rnase_pc1_pc2_not_selected<- kmeans(pca_rnase_pc1_pc2_not_selected, centers = 3)
km_result_rnase_pc1_pc3_not_selected<- kmeans(pca_rnase_pc1_pc3_not_selected, centers = 3)
km_result_rnase_pc2_pc3_not_selected<- kmeans(pca_rnase_pc2_pc3_not_selected, centers = 3)
library(factoextra)
# pca_df contains the data, e.g. PC1 and PC2
fviz_cluster(km_result_ctrl_pc1_pc2, data = pca_ctrl_pc1_pc2,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC2 CTRL (SHIFT)")
fviz_cluster(km_result_rnase_pc1_pc2, data = pca_rnase_pc1_pc2,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("firebrick3", "violetred4", "midnightblue"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC2 RNASE (SHIFT)")
fviz_cluster(km_result_ctrl_pc1_pc3, data = pca_ctrl_pc1_pc3,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC3 CTRL (SHIFT)")
fviz_cluster(km_result_rnase_pc1_pc3, data = pca_rnase_pc1_pc3,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("violetred4", "midnightblue", "firebrick3"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC3 RNASE (SHIFT)")
fviz_cluster(km_result_ctrl_pc2_pc3, data = pca_ctrl_pc2_pc3,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC2 vs PC3 CTRL (SHIFT)")
fviz_cluster(km_result_rnase_pc2_pc3, data = pca_rnase_pc2_pc3,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC2 vs PC3 RNASE (SHIFT)")
# pca_df contains the data, e.g. PC1 and PC2
fviz_cluster(km_result_ctrl_pc1_pc2_not_selected, data = pca_ctrl_pc1_pc2_not_selected,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster der CTRL (NO SHIFT)")
fviz_cluster(km_result_rnase_pc1_pc2_not_selected, data = pca_rnase_pc1_pc2_not_selected,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC2 RNASE (NO SHIFT)")
fviz_cluster(km_result_ctrl_pc1_pc3_not_selected, data = pca_ctrl_pc1_pc3_not_selected,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster der CTRL (NO SHIFT)")
fviz_cluster(km_result_rnase_pc1_pc3_not_selected, data = pca_rnase_pc1_pc3_not_selected,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("firebrick3", "midnightblue", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC3 RNASE (NO SHIFT)")
fviz_cluster(km_result_ctrl_pc2_pc3_not_selected, data = pca_ctrl_pc2_pc3_not_selected,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster der CTRL (NO SHIFT)")
fviz_cluster(km_result_rnase_pc2_pc3_not_selected, data = pca_rnase_pc2_pc3_not_selected,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC2 vs PC3 RNASE (NO SHIFT)")
#For ctrl selected vs rnase selected
#Rename relevant variables to avoid PC name redundance later on
ctrl_1 <- pca_ctrl_pc1_pc2$PC1
ctrl_2 <- pca_ctrl_pc1_pc2$PC2
ctrl_3 <- pca_ctrl_pc1_pc3$PC3
rnase_1 <- pca_rnase_pc1_pc2$PC1
rnase_2 <- pca_rnase_pc1_pc2$PC2
rnase_3 <- pca_rnase_pc1_pc3$PC3
#Generates plot with PCA datapoints and draws a trendline through it
plot(ctrl_1,rnase_1,pch=20,col='blue', xlab='Ctrl selected PC1',ylab='Rnase selected PC1', main = "Ctrl selected PC1 vs Rnase selected PC1");abline(0,1,col='red')
plot(ctrl_1,rnase_2,pch=20,col='blue', xlab='Ctrl selected PC1',ylab='Rnase selected PC2', main = "Ctrl selected PC1 vs Rnase selected PC2");abline(0,1,col='red')
plot(ctrl_1,rnase_3,pch=20,col='blue', xlab='Ctrl selected PC1',ylab='Rnase selected PC3', main = "Ctrl selected PC1 vs Rnase selected PC3");abline(0,1,col='red')
plot(ctrl_2,rnase_1,pch=20,col='blue', xlab='Ctrl selected PC2',ylab='Rnase selected PC1', main = "Ctrl selected PC2 vs Rnase selected PC1");abline(0,1,col='red')
plot(ctrl_2,rnase_2,pch=20,col='blue', xlab='Ctrl selected PC2',ylab='Rnase selected PC2', main = "Ctrl selected PC2 vs Rnase selected PC2");abline(0,1,col='red')
plot(ctrl_2,rnase_3,pch=20,col='blue', xlab='Ctrl selected PC2',ylab='Rnase selected PC3', main = "Ctrl selected PC2 vs Rnase selected PC3");abline(0,1,col='red')
plot(ctrl_3,rnase_1,pch=20,col='blue', xlab='Ctrl selected PC3',ylab='Rnase selected PC1', main = "Ctrl selected PC3 vs Rnase selected PC1");abline(0,1,col='red')
plot(ctrl_3,rnase_2,pch=20,col='blue', xlab='Ctrl selected PC3',ylab='Rnase selected PC2', main = "Ctrl selected PC3 vs Rnase selected PC2");abline(0,1,col='red')
plot(ctrl_3,rnase_3,pch=20,col='blue', xlab='Ctrl selected PC3',ylab='Rnase selected PC3', main = "Ctrl selected PC3 vs Rnase selected PC3");abline(0,1,col='red')
#Defines a target variable, so what should be predicted by the regression analysis
target_selected <- ctrl_selected$global_maximum
#Builds matrix for regression analysis from target variable with two PCA components
df_regression_selected_11 <- cbind(target = target_selected ,
ctrl_1, rnase_1)
df_regression_selected_12 <- cbind(target = target_selected ,
ctrl_1, rnase_2)
df_regression_selected_13 <- cbind(target = target_selected ,
ctrl_1, rnase_3)
df_regression_selected_21 <- cbind(target = target_selected ,
ctrl_2, rnase_1)
df_regression_selected_22 <- cbind(target =target_selected,
ctrl_2, rnase_2)
df_regression_selected_23 <- cbind(target = target_selected ,
ctrl_2, rnase_3)
df_regression_selected_31 <- cbind(target = target_selected ,
ctrl_3, rnase_1)
df_regression_selected_32 <- cbind(target =target_selected ,
ctrl_3, rnase_2)
df_regression_selected_33 <- cbind(target = target_selected ,
ctrl_3, rnase_3)
#Make matrix a data frame
df_regression_selected_11 <- as.data.frame(df_regression_selected_11)
df_regression_selected_12 <- as.data.frame(df_regression_selected_12)
df_regression_selected_13 <- as.data.frame(df_regression_selected_13)
df_regression_selected_21 <- as.data.frame(df_regression_selected_21)
df_regression_selected_22 <- as.data.frame(df_regression_selected_22)
df_regression_selected_23 <- as.data.frame(df_regression_selected_23)
df_regression_selected_31 <- as.data.frame(df_regression_selected_31)
df_regression_selected_32 <- as.data.frame(df_regression_selected_32)
df_regression_selected_33 <- as.data.frame(df_regression_selected_33)
#Multiple linear regression analysis
model_selected_pc1_1<- lm(target ~ ctrl_1 + rnase_1, data = df_regression_selected_11)
model_selected_pc1_2<- lm(target ~ctrl_1 + rnase_2, data = df_regression_selected_12)
model_selected_pc1_3<- lm(target ~ ctrl_1 + rnase_3, data = df_regression_selected_13)
model_selected_pc2_1<- lm(target ~ ctrl_2 + rnase_1, data = df_regression_selected_21)
model_selected_pc2_2<- lm(target ~ ctrl_2 + rnase_2, data = df_regression_selected_22)
model_selected_pc2_3<- lm(target ~ ctrl_2 + rnase_3, data = df_regression_selected_23)
model_selected_pc3_1<- lm(target ~ ctrl_3 + rnase_1, data = df_regression_selected_31)
model_selected_pc3_2<- lm(target ~ ctrl_3 + rnase_2, data = df_regression_selected_32)
model_selected_pc3_3<- lm(target ~ ctrl_3 + rnase_3, data = df_regression_selected_33)
#Show results/summary
summary(model_selected_pc1_1)
summary(model_selected_pc1_2)
summary(model_selected_pc1_3)
summary(model_selected_pc2_1)
summary(model_selected_pc2_2)
summary(model_selected_pc2_3)
summary(model_selected_pc3_1)
summary(model_selected_pc3_2)
summary(model_selected_pc3_3)
#For ctrl not-selected vs rnase not-selected
#Rename relevant variables to avoid PC name redundance later on
ctrl_ns_1 <- pca_ctrl_pc1_pc2_not_selected$PC1
ctrl_ns_2 <- pca_ctrl_pc1_pc2_not_selected$PC2
ctrl_ns_3 <- pca_ctrl_pc1_pc3_not_selected$PC3
rnase_ns_1 <- pca_rnase_pc1_pc2_not_selected$PC1
rnase_ns_2 <- pca_rnase_pc1_pc2_not_selected$PC2
rnase_ns_3 <- pca_rnase_pc1_pc3_not_selected$PC3
#Generates plot with PCA datapoints and draws a trendline through it
plot(ctrl_ns_1,rnase_ns_1,pch=20,col='blue', xlab='Ctrl not-selected PC1',ylab='Rnase not-selected PC1', main = "Ctrl not-selected PC1 vs Rnase not-selected PC1");abline(0,1,col='red')
plot(ctrl_ns_1,rnase_ns_2,pch=20,col='blue', xlab='Ctrl not-selected PC1',ylab='Rnase not-selected PC2', main = "Ctrl not-selected PC1 vs Rnase not-selected PC2");abline(0,1,col='red')
plot(ctrl_ns_1,rnase_ns_3,pch=20,col='blue', xlab='Ctrl not-selected PC1',ylab='Rnase not-selected PC3', main = "Ctrl not-selected PC1 vs Rnase not-selected PC3");abline(0,1,col='red')
plot(ctrl_ns_2,rnase_ns_1,pch=20,col='blue', xlab='Ctrl not-selected PC2',ylab='Rnase not-selected PC1', main = "Ctrl not-selected PC2 vs Rnase not-selected PC1");abline(0,1,col='red')
plot(ctrl_ns_2,rnase_ns_2,pch=20,col='blue', xlab='Ctrl not-selected PC2',ylab='Rnase not-selected PC2', main = "Ctrl not-selected PC2 vs Rnase not-selected PC2");abline(0,1,col='red')
plot(ctrl_ns_2,rnase_ns_3,pch=20,col='blue', xlab='Ctrl not-selected PC2',ylab='Rnase not-selected PC3', main = "Ctrl not-selected PC2 vs Rnase not-selected PC3");abline(0,1,col='red')
plot(ctrl_ns_3,rnase_ns_1,pch=20,col='blue', xlab='Ctrl not-selected PC3',ylab='Rnase not-selected PC1', main = "Ctrl not-selected PC3 vs Rnase not-selected PC1");abline(0,1,col='red')
plot(ctrl_ns_3,rnase_ns_2,pch=20,col='blue', xlab='Ctrl not-selected PC3',ylab='Rnase not-selected PC2', main = "Ctrl not-selected PC3 vs Rnase not-selected PC2");abline(0,1,col='red')
plot(ctrl_ns_3,rnase_ns_3,pch=20,col='blue', xlab='Ctrl not-selected PC3',ylab='Rnase not-selected PC3', main = "Ctrl not-selected PC3 vs Rnase not-selected PC3");abline(0,1,col='red')
#Defines a target variable, so what should be predicted by the regression analysis
target_not_selected <- ctrl_selected$global_maximum
#Builds matrix for regression analysis from target variable with two PCA components
df_regression_not_selected_11 <- cbind(target = target_not_selected ,
ctrl_ns_1, rnase_ns_1)
df_regression_not_selected_12 <- cbind(target = target_not_selected ,
ctrl_ns_1, rnase_ns_2)
df_regression_not_selected_13 <- cbind(target = target_not_selected ,
ctrl_ns_1, rnase_ns_3)
df_regression_not_selected_21 <- cbind(target = target_not_selected ,
ctrl_ns_2, rnase_ns_1)
df_regression_not_selected_22 <- cbind(target =target_not_selected,
ctrl_ns_2, rnase_ns_2)
df_regression_not_selected_23 <- cbind(target = target_not_selected ,
ctrl_ns_2, rnase_ns_3)
df_regression_not_selected_31 <- cbind(target = target_not_selected ,
ctrl_ns_3, rnase_ns_1)
df_regression_not_selected_32 <- cbind(target =target_not_selected ,
ctrl_ns_3, rnase_ns_2)
df_regression_not_selected_33 <- cbind(target = target_not_selected ,
ctrl_ns_3, rnase_ns_3)
#Make matrix a data frame
df_regression_not_selected_11 <- as.data.frame(df_regression_not_selected_11)
df_regression_not_selected_12 <- as.data.frame(df_regression_not_selected_12)
df_regression_not_selected_13 <- as.data.frame(df_regression_not_selected_13)
df_regression_not_selected_21 <- as.data.frame(df_regression_not_selected_21)
df_regression_not_selected_22 <- as.data.frame(df_regression_not_selected_22)
df_regression_not_selected_23 <- as.data.frame(df_regression_not_selected_23)
df_regression_not_selected_31 <- as.data.frame(df_regression_not_selected_31)
df_regression_not_selected_32 <- as.data.frame(df_regression_not_selected_32)
df_regression_not_selected_33 <- as.data.frame(df_regression_not_selected_33)
#Multiple linear regression analysis
model_not_selected_pc1_1<- lm(target ~ ctrl_ns_1 + rnase_ns_1, data = df_regression_not_selected_11)
model_not_selected_pc1_2<- lm(target ~ctrl_ns_1 + rnase_ns_2, data = df_regression_not_selected_12)
model_not_selected_pc1_3<- lm(target ~ ctrl_ns_1 + rnase_ns_3, data = df_regression_not_selected_13)
model_not_selected_pc2_1<- lm(target ~ ctrl_ns_2 + rnase_ns_1, data = df_regression_not_selected_21)
model_not_selected_pc2_2<- lm(target ~ ctrl_ns_2 + rnase_ns_2, data = df_regression_not_selected_22)
model_not_selected_pc2_3<- lm(target ~ ctrl_ns_2 + rnase_ns_3, data = df_regression_not_selected_23)
model_not_selected_pc3_1<- lm(target ~ ctrl_ns_3 + rnase_ns_1, data = df_regression_not_selected_31)
model_not_selected_pc3_2<- lm(target ~ ctrl_ns_3 + rnase_ns_2, data = df_regression_not_selected_32)
model_not_selected_pc3_3<- lm(target ~ ctrl_ns_3 + rnase_ns_3, data = df_regression_not_selected_33)
#Show results/summary
summary(model_not_selected_pc1_1)
summary(model_not_selected_pc1_2)
summary(model_not_selected_pc1_3)
summary(model_not_selected_pc2_1)
summary(model_not_selected_pc2_2)
summary(model_not_selected_pc2_3)
summary(model_not_selected_pc3_1)
summary(model_not_selected_pc3_2)
summary(model_not_selected_pc3_3)
# JPEG-Datei öffnen
jpeg("PCA: PC1 vs PC2 CTRL (SHIFT).jpeg", width = 800, height = 600)
plot(pca_result_ctrl$x[,1:2], col = "midnightblue", pch = 16,
xlab = "PC1", ylab = "PC2", main = "PCA: PC1 vs PC2 CTRL (SHIFT)")
# Grafikgerät schließen
dev.off()
# JPEG-Datei öffnen
jpeg("PCA: PC1 vs PC2 RNASE (SHIFT).jpeg", width = 800, height = 600)
plot(pca_result_rnase$x[,1:2], col = "midnightblue", pch = 16,
xlab = "PC1", ylab = "PC2", main = "PCA: PC1 vs PC2 RNASE (SHIFT)")
# Grafikgerät schließen
dev.off()
# JPEG-Datei öffnen
jpeg("PCA: PC1 vs PC2 RNASE (SHIFT).jpeg", width = 800, height = 600)
plot(pca_result_rnase$x[,1:2], col = "midnightblue", pch = 16,
xlab = "PC1", ylab = "PC2", main = "PCA: PC1 vs PC2 RNASE (SHIFT)")
# Grafikgerät schließen
dev.off()
# JPEG-Datei öffnen
jpeg("PCA: PC1 vs PC2 RNASE (SHIFT).jpeg", width = 800, height = 600)
plot(pca_result_rnase$x[,1:2],
col = "midnightblue",
pch = 16,
xlab = "PC1",
ylab = "PC2",
main = "PCA: PC1 vs PC2 RNASE (SHIFT)")
# Grafikgerät schließen
dev.off()
#plot PC1 with PC2
plot(pca_result_ctrl$x[,1:2], col = "midnightblue", pch = 16,
xlab = "PC1", ylab = "PC2", main = "PCA: PC1 vs PC2 CTRL (SHIFT)")
plot(pca_result_rnase$x[,1:2], col = "midnightblue", pch = 16,
xlab = "PC1", ylab = "PC2", main = "PCA: PC1 vs PC2 RNASE (SHIFT)")
#plot PC1 with PC3
plot(pca_result_ctrl$x[,c(1, 3)], col = "midnightblue", pch = 16,
xlab = "PC1", ylab = "PC3", main = "PCA: PC1 vs PC3 CTRL (SHIFT)")
plot(pca_result_rnase$x[,c(1, 3)], col = "midnightblue", pch = 16,
xlab = "PC1", ylab = "PC3", main = "PCA: PC1 vs PC3 RNASE (SHIFT)")
#plot PC2 with PC3
plot(pca_result_ctrl$x[,2:3], col = "midnightblue", pch = 16,
xlab = "PC2", ylab = "PC3", main = "PCA: PC2 vs PC3 CTRL (SHIFT)")
plot(pca_result_rnase$x[,2:3], col = "midnightblue", pch = 16,
xlab = "PC2", ylab = "PC3", main = "PCA: PC2 vs PC3 RNASE (SHIFT)")
# Simple 2D PCA-Plot
plot(pca_result_ctrl_not_selected$x[,1:2], col = "midnightblue", pch = 16,
xlab = "PC1", ylab = "PC2", main = "PCA: PC1 vs PC2 CTRL (NO SHIFT)")
plot(pca_result_rnase_not_selected$x[,1:2], col = "midnightblue", pch = 16,
xlab = "PC1", ylab = "PC2", main = "PCA: PC1 vs PC2 RNASE (NO SHIFT)")
#plot PC1 with PC3
plot(pca_result_ctrl_not_selected$x[,c(1, 3)], col = "midnightblue", pch = 16,
xlab = "PC1", ylab = "PC3", main = "PCA: PC1 vs PC3 CTRL (NO SHIFT)")
plot(pca_result_rnase_not_selected$x[,c(1, 3)], col = "midnightblue", pch = 16,
xlab = "PC1", ylab = "PC3", main = "PCA: PC1 vs PC3 RNASE (NO SHIFT)")
#plot PC2 with PC3
plot(pca_result_ctrl_not_selected$x[,2:3], col = "midnightblue", pch = 16,
xlab = "PC2", ylab = "PC3", main = "PCA: PC2 vs PC3 CTRL (NO SHIFT)")
plot(pca_result_rnase_not_selected$x[,2:3], col = "midnightblue", pch = 16,
xlab = "PC2", ylab = "PC3", main = "PCA: PC2 vs PC3 RNASE (NO SHIFT)")
# JPEG-Datei öffnen
jpeg("PCA: PC1 vs PC2 RNASE.jpeg", width = 800, height = 600)
plot(pca_result_rnase$x[,1:2],
col = "midnightblue",
pch = 16,
xlab = "PC1",
ylab = "PC2",
main = "PCA: PC1 vs PC2 RNASE (SHIFT)")
# Grafikgerät schließen
dev.off()
# JPEG-Datei öffnen
jpeg("PCA_CTRL_PC1_vs_PC2.jpeg", width = 800, height = 600)
# PCA-Plot zeichnen
plot(pca_result_ctrl$x[,1:2],
col = "midnightblue",
pch = 16,
xlab = "PC1",
ylab = "PC2",
main = "PCA: PC1 vs PC2 CTRL (SHIFT)")
# Grafikgerät schließen
dev.off()
# JPEG-Datei öffnen
jpeg("PCA_CTRL_PC1_vs_PC2.jpeg", width = 800, height = 600)
# PCA-Plot zeichnen
plot(pca_result_ctrl$x[,1:2],
col = "midnightblue",
pch = 16,
xlab = "PC1",
ylab = "PC2",
main = "PCA: PC1 vs PC2 CTRL (SHIFT)")
# Grafikgerät schließen
dev.off()
# JPEG-Datei öffnen
jpeg("PCA_RNASE_PC1_vs_PC2.jpeg", width = 800, height = 600)
plot(pca_result_rnase$x[,1:2], col = "midnightblue", pch = 16,
xlab = "PC1", ylab = "PC2", main = "PCA: PC1 vs PC2 RNASE (SHIFT)")
# Grafikgerät schließen
dev.off()
# JPEG-Datei öffnen
jpeg("PCA_RNASE_PC1_vs_PC2.jpeg", width = 800, height = 600)
plot(pca_result_rnase_not_selected$x[,1:2], col = "midnightblue", pch = 16,
xlab = "PC1", ylab = "PC2", main = "PCA: PC1 vs PC2 RNASE (NO SHIFT)")
# Grafikgerät schließen
dev.off()
# JPEG-Datei öffnen
jpeg("PCA_CTRL_PC1_vs_PC2.jpeg", width = 800, height = 600)
plot(pca_result_ctrl_not_selected$x[,1:2], col = "midnightblue", pch = 16,
xlab = "PC1", ylab = "PC2", main = "PCA: PC1 vs PC2 CTRL (NO SHIFT)")
# Grafikgerät schließen
dev.off()
# JPEG-Datei öffnen
jpeg("Elbow-Plot CTRL (SHIFT).jpeg", width = 800, height = 600)
plot(pca_result_ctrl, type = "l", main = "Elbow-Plot CTRL (SHIFT)")
# Grafikgerät schließen
dev.off()
# JPEG-Datei öffnen
jpeg("Elbow-Plot RNASE (SHIFT).jpeg", width = 800, height = 600)
plot(pca_result_rnase, type = "l", main = "Elbow-Plot RNASE (SHIFT)")
# Grafikgerät schließen
dev.off()
# JPEG-Datei öffnen
jpeg("Elbow-Plot CTRL (NO SHIFT).jpeg", width = 800, height = 600)
plot(pca_result_ctrl_not_selected, type = "l", main = "Elbow-Plot CTRL (NO SHIFT)")
# Grafikgerät schließen
dev.off()
# JPEG-Datei öffnen
jpeg("Elbow-Plot RNASE (NO SHIFT).jpeg", width = 800, height = 600)
plot(pca_result_rnase_not_selected, type = "l", main = "Elbow-Plot RNASE (NO SHIFT)")
# Grafikgerät schließen
dev.off()
# JPEG-Datei öffnen
jpeg("k-Means Cluster: PC1 vs PC2 CTRL (SHIFT).jpeg", width = 800, height = 600)
fviz_cluster(km_result_ctrl_pc1_pc2, data = pca_ctrl_pc1_pc2,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC2 CTRL (SHIFT)")
# Grafikgerät schließen
dev.off()
# JPEG-Datei öffnen
jpeg("kMeans_PCA_CTRL.jpeg", width = 800, height = 600)
# Cluster-Plot erstellen
print(
fviz_cluster(km_result_ctrl_pc1_pc2, data = pca_ctrl_pc1_pc2,
geom = "point",
ellipse.type = "norm",
stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"),
ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC2 CTRL (SHIFT)")
)
# Grafikgerät schließen
dev.off()
# JPEG-Datei öffnen
jpeg("k-Means Cluster: PC1 vs PC2 CTRL (SHIFT).jpeg", width = 800, height = 600)
# Cluster-Plot erstellen
print(
fviz_cluster(km_result_ctrl_pc1_pc2, data = pca_ctrl_pc1_pc2,
geom = "point",
ellipse.type = "norm",
stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"),
ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC2 CTRL (SHIFT)")
)
# Grafikgerät schließen
dev.off()
# JPEG-Datei öffnen
jpeg("k-Means Cluster: PC1 vs PC2 CTRL.jpeg", width = 800, height = 600)
# Cluster-Plot erstellen
print(
fviz_cluster(km_result_ctrl_pc1_pc2, data = pca_ctrl_pc1_pc2,
geom = "point",
ellipse.type = "norm",
stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"),
ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC2 CTRL (SHIFT)")
)
# Grafikgerät schließen
dev.off()
# JPEG-Datei öffnen
jpeg("k-Means Cluster PC1 vs PC2 CTRL.jpeg", width = 800, height = 600)
# Cluster-Plot erstellen
print(
fviz_cluster(km_result_ctrl_pc1_pc2, data = pca_ctrl_pc1_pc2,
geom = "point",
ellipse.type = "norm",
stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"),
ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC2 CTRL (SHIFT)")
)
# Grafikgerät schließen
dev.off()
# JPEG-Datei öffnen
jpeg("k-Means Cluster PC1 vs PC2 RNASE (SHIFT).jpeg", width = 800, height = 600)
fviz_cluster(km_result_rnase_pc1_pc2, data = pca_rnase_pc1_pc2,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("firebrick3", "violetred4", "midnightblue"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC2 RNASE (SHIFT)")
)
# JPEG-Datei öffnen
jpeg("k-Means Cluster PC1 vs PC2 RNASE (SHIFT).jpeg", width = 800, height = 600)
fviz_cluster(km_result_rnase_pc1_pc2, data = pca_rnase_pc1_pc2,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("firebrick3", "violetred4", "midnightblue"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC2 RNASE (SHIFT)")
# Grafikgerät schließen
dev.off()
library(factoextra)
# pca_df contains the data, e.g. PC1 and PC2
fviz_cluster(km_result_ctrl_pc1_pc2, data = pca_ctrl_pc1_pc2,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC2 CTRL (SHIFT)")
fviz_cluster(km_result_rnase_pc1_pc2, data = pca_rnase_pc1_pc2,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("firebrick3", "violetred4", "midnightblue"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC2 RNASE (SHIFT)")
fviz_cluster(km_result_ctrl_pc1_pc3, data = pca_ctrl_pc1_pc3,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC3 CTRL (SHIFT)")
fviz_cluster(km_result_rnase_pc1_pc3, data = pca_rnase_pc1_pc3,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("violetred4", "midnightblue", "firebrick3"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC3 RNASE (SHIFT)")
fviz_cluster(km_result_ctrl_pc2_pc3, data = pca_ctrl_pc2_pc3,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC2 vs PC3 CTRL (SHIFT)")
fviz_cluster(km_result_rnase_pc2_pc3, data = pca_rnase_pc2_pc3,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC2 vs PC3 RNASE (SHIFT)")
# pca_df contains the data, e.g. PC1 and PC2
fviz_cluster(km_result_ctrl_pc1_pc2_not_selected, data = pca_ctrl_pc1_pc2_not_selected,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC2 CTRL (NO SHIFT)")
fviz_cluster(km_result_rnase_pc1_pc2_not_selected, data = pca_rnase_pc1_pc2_not_selected,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC2 RNASE (NO SHIFT)")
fviz_cluster(km_result_ctrl_pc1_pc3_not_selected, data = pca_ctrl_pc1_pc3_not_selected,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC3 CTRL (NO SHIFT)")
fviz_cluster(km_result_rnase_pc1_pc3_not_selected, data = pca_rnase_pc1_pc3_not_selected,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("firebrick3", "midnightblue", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC3 RNASE (NO SHIFT)")
fviz_cluster(km_result_ctrl_pc2_pc3_not_selected, data = pca_ctrl_pc2_pc3_not_selected,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC2 vs PC3 CTRL (NO SHIFT)")
fviz_cluster(km_result_rnase_pc2_pc3_not_selected, data = pca_rnase_pc2_pc3_not_selected,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC2 vs PC3 RNASE (SHIFT)")
# JPEG-Datei öffnen
jpeg("k-Means Cluster PC1 vs PC2 CTRL (NO SHIFT).jpeg", width = 800, height = 600)
fviz_cluster(km_result_ctrl_pc1_pc2_not_selected, data = pca_ctrl_pc1_pc2_not_selected,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC2 CTRL (NO SHIFT)")
# Grafikgerät schließen
dev.off()
# JPEG-Datei öffnen
jpeg("k-Means Cluster PC1 vs PC2 RNASE (NO SHIFT).jpeg", width = 800, height = 600)
fviz_cluster(km_result_rnase_pc1_pc2_not_selected, data = pca_rnase_pc1_pc2_not_selected,
geom = "point", ellipse.type = "norm", stand = FALSE,
palette = c("midnightblue", "firebrick3", "violetred4"), ggtheme = theme_minimal(),
main = "k-Means Cluster: PC1 vs PC2 RNASE (NO SHIFT)")
# Grafikgerät schließen
dev.off()
View(ctrl_selected)
View(ctrl_not_selected)
