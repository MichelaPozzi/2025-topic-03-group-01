norm_mean_frxn19_CTRL <-  norm_fact(avg.table.frxn19.CTRL)/avg.table.frxn19.CTRL
norm_mean_frxn20_CTRL <-  norm_fact(avg.table.frxn20.CTRL)/avg.table.frxn20.CTRL
norm_mean_frxn21_CTRL <-  norm_fact(avg.table.frxn21.CTRL)/avg.table.frxn21.CTRL
norm_mean_frxn22_CTRL <-  norm_fact(avg.table.frxn22.CTRL)/avg.table.frxn22.CTRL
norm_mean_frxn23_CTRL <-  norm_fact(avg.table.frxn23.CTRL)/avg.table.frxn23.CTRL
norm_mean_frxn24_CTRL <-  norm_fact(avg.table.frxn24.CTRL)/avg.table.frxn24.CTRL
norm_mean_frxn25_CTRL <-  norm_fact(avg.table.frxn25.CTRL)/avg.table.frxn25.CTRL
norm_mean_frxn1_RNASE <-  norm_fact(avg.table.frxn1.RNASE)/avg.table.frxn1.RNASE
norm_mean_frxn2_RNASE <-  norm_fact(avg.table.frxn2.RNASE)/avg.table.frxn2.RNASE
norm_mean_frxn3_RNASE <-  norm_fact(avg.table.frxn3.RNASE)/avg.table.frxn3.RNASE
norm_mean_frxn4_RNASE <-  norm_fact(avg.table.frxn4.RNASE)/avg.table.frxn4.RNASE
norm_mean_frxn5_RNASE <-  norm_fact(avg.table.frxn5.RNASE)/avg.table.frxn5.RNASE
norm_mean_frxn6_RNASE <-  norm_fact(avg.table.frxn6.RNASE)/avg.table.frxn6.RNASE
norm_mean_frxn7_RNASE <-  norm_fact(avg.table.frxn7.RNASE)/avg.table.frxn7.RNASE
norm_mean_frxn8_RNASE <-  norm_fact(avg.table.frxn8.RNASE)/avg.table.frxn8.RNASE
norm_mean_frxn9_RNASE <-  norm_fact(avg.table.frxn9.RNASE)/avg.table.frxn9.RNASE
norm_mean_frxn10_RNASE <-  norm_fact(avg.table.frxn10.RNASE)/avg.table.frxn10.RNASE
norm_mean_frxn11_RNASE <-  norm_fact(avg.table.frxn11.RNASE)/avg.table.frxn11.RNASE
norm_mean_frxn12_RNASE <-  norm_fact(avg.table.frxn12.RNASE)/avg.table.frxn12.RNASE
norm_mean_frxn13_RNASE <-  norm_fact(avg.table.frxn13.RNASE)/avg.table.frxn13.RNASE
norm_mean_frxn14_RNASE <-  norm_fact(avg.table.frxn14.RNASE)/avg.table.frxn14.RNASE
norm_mean_frxn15_RNASE <-  norm_fact(avg.table.frxn15.RNASE)/avg.table.frxn15.RNASE
norm_mean_frxn16_RNASE <-  norm_fact(avg.table.frxn16.RNASE)/avg.table.frxn16.RNASE
norm_mean_frxn17_RNASE <-  norm_fact(avg.table.frxn17.RNASE)/avg.table.frxn17.RNASE
norm_mean_frxn18_RNASE <-  norm_fact(avg.table.frxn18.RNASE)/avg.table.frxn18.RNASE
norm_mean_frxn19_RNASE <-  norm_fact(avg.table.frxn19.RNASE)/avg.table.frxn19.RNASE
norm_mean_frxn20_RNASE <-  norm_fact(avg.table.frxn20.RNASE)/avg.table.frxn20.RNASE
norm_mean_frxn21_RNASE <-  norm_fact(avg.table.frxn21.RNASE)/avg.table.frxn21.RNASE
norm_mean_frxn22_RNASE <-  norm_fact(avg.table.frxn22.RNASE)/avg.table.frxn22.RNASE
norm_mean_frxn23_RNASE <-  norm_fact(avg.table.frxn23.RNASE)/avg.table.frxn23.RNASE
norm_mean_frxn24_RNASE <-  norm_fact(avg.table.frxn24.RNASE)/avg.table.frxn24.RNASE
norm_mean_frxn25_RNASE <-  norm_fact(avg.table.frxn25.RNASE)/avg.table.frxn25.RNASE
print(norm_mean_frxn1_CTRL)
# Compute vectors containing the normalization factors for the respective treatment and replicates and fractions 1 to 25
# Korrekturfaktor fÃ¼r die overall Proteinmenge?!
norm.ctrl1 <- c(norm_mean_frxn1_CTRL[1],norm_mean_frxn2_CTRL[1],norm_mean_frxn3_CTRL[1],norm_mean_frxn4_CTRL[1],norm_mean_frxn5_CTRL[1],norm_mean_frxn6_CTRL[1],norm_mean_frxn7_CTRL[1],norm_mean_frxn8_CTRL[1],norm_mean_frxn9_CTRL[1],norm_mean_frxn10_CTRL[1],norm_mean_frxn11_CTRL[1],norm_mean_frxn12_CTRL[1],norm_mean_frxn13_CTRL[1],norm_mean_frxn14_CTRL[1],norm_mean_frxn15_CTRL[1],norm_mean_frxn16_CTRL[1],norm_mean_frxn17_CTRL[1],norm_mean_frxn18_CTRL[1],norm_mean_frxn19_CTRL[1],norm_mean_frxn20_CTRL[1],norm_mean_frxn21_CTRL[1],norm_mean_frxn22_CTRL[1],norm_mean_frxn23_CTRL[1],norm_mean_frxn24_CTRL[1],norm_mean_frxn25_CTRL[1])
norm.ctrl2 <- c(norm_mean_frxn1_CTRL[2],norm_mean_frxn2_CTRL[2],norm_mean_frxn3_CTRL[2],norm_mean_frxn4_CTRL[2],norm_mean_frxn5_CTRL[2],norm_mean_frxn6_CTRL[2],norm_mean_frxn7_CTRL[2],norm_mean_frxn8_CTRL[2],norm_mean_frxn9_CTRL[2],norm_mean_frxn10_CTRL[2],norm_mean_frxn11_CTRL[2],norm_mean_frxn12_CTRL[2],norm_mean_frxn13_CTRL[2],norm_mean_frxn14_CTRL[2],norm_mean_frxn15_CTRL[2],norm_mean_frxn16_CTRL[2],norm_mean_frxn17_CTRL[2],norm_mean_frxn18_CTRL[2],norm_mean_frxn19_CTRL[2],norm_mean_frxn20_CTRL[2],norm_mean_frxn21_CTRL[2],norm_mean_frxn22_CTRL[2],norm_mean_frxn23_CTRL[2],norm_mean_frxn24_CTRL[2],norm_mean_frxn25_CTRL[2])
norm.ctrl3 <- c(norm_mean_frxn1_CTRL[3],norm_mean_frxn2_CTRL[3],norm_mean_frxn3_CTRL[3],norm_mean_frxn4_CTRL[3],norm_mean_frxn5_CTRL[3],norm_mean_frxn6_CTRL[3],norm_mean_frxn7_CTRL[3],norm_mean_frxn8_CTRL[3],norm_mean_frxn9_CTRL[3],norm_mean_frxn10_CTRL[3],norm_mean_frxn11_CTRL[3],norm_mean_frxn12_CTRL[3],norm_mean_frxn13_CTRL[3],norm_mean_frxn14_CTRL[3],norm_mean_frxn15_CTRL[3],norm_mean_frxn16_CTRL[3],norm_mean_frxn17_CTRL[3],norm_mean_frxn18_CTRL[3],norm_mean_frxn19_CTRL[3],norm_mean_frxn20_CTRL[3],norm_mean_frxn21_CTRL[3],norm_mean_frxn22_CTRL[3],norm_mean_frxn23_CTRL[3],norm_mean_frxn24_CTRL[3],norm_mean_frxn25_CTRL[3])
norm.rnase1 <- c(norm_mean_frxn1_RNASE[1],norm_mean_frxn2_RNASE[1],norm_mean_frxn3_RNASE[1],norm_mean_frxn4_RNASE[1],norm_mean_frxn5_RNASE[1],norm_mean_frxn6_RNASE[1],norm_mean_frxn7_RNASE[1],norm_mean_frxn8_RNASE[1],norm_mean_frxn9_RNASE[1],norm_mean_frxn10_RNASE[1],norm_mean_frxn11_RNASE[1],norm_mean_frxn12_RNASE[1],norm_mean_frxn13_RNASE[1],norm_mean_frxn14_RNASE[1],norm_mean_frxn15_RNASE[1],norm_mean_frxn16_RNASE[1],norm_mean_frxn17_RNASE[1],norm_mean_frxn18_RNASE[1],norm_mean_frxn19_RNASE[1],norm_mean_frxn20_RNASE[1],norm_mean_frxn21_RNASE[1],norm_mean_frxn22_RNASE[1],norm_mean_frxn23_RNASE[1],norm_mean_frxn24_RNASE[1],norm_mean_frxn25_RNASE[1])
norm.rnase2 <- c(norm_mean_frxn1_RNASE[2],norm_mean_frxn2_RNASE[2],norm_mean_frxn3_RNASE[2],norm_mean_frxn4_RNASE[2],norm_mean_frxn5_RNASE[2],norm_mean_frxn6_RNASE[2],norm_mean_frxn7_RNASE[2],norm_mean_frxn8_RNASE[2],norm_mean_frxn9_RNASE[2],norm_mean_frxn10_RNASE[2],norm_mean_frxn11_RNASE[2],norm_mean_frxn12_RNASE[2],norm_mean_frxn13_RNASE[2],norm_mean_frxn14_RNASE[2],norm_mean_frxn15_RNASE[2],norm_mean_frxn16_RNASE[2],norm_mean_frxn17_RNASE[2],norm_mean_frxn18_RNASE[2],norm_mean_frxn19_RNASE[2],norm_mean_frxn20_RNASE[2],norm_mean_frxn21_RNASE[2],norm_mean_frxn22_RNASE[2],norm_mean_frxn23_RNASE[2],norm_mean_frxn24_RNASE[2],norm_mean_frxn25_RNASE[2])
norm.rnase3 <- c(norm_mean_frxn1_RNASE[3],norm_mean_frxn2_RNASE[3],norm_mean_frxn3_RNASE[3],norm_mean_frxn4_RNASE[3],norm_mean_frxn5_RNASE[3],norm_mean_frxn6_RNASE[3],norm_mean_frxn7_RNASE[3],norm_mean_frxn8_RNASE[3],norm_mean_frxn9_RNASE[3],norm_mean_frxn10_RNASE[3],norm_mean_frxn11_RNASE[3],norm_mean_frxn12_RNASE[3],norm_mean_frxn13_RNASE[3],norm_mean_frxn14_RNASE[3],norm_mean_frxn15_RNASE[3],norm_mean_frxn16_RNASE[3],norm_mean_frxn17_RNASE[3],norm_mean_frxn18_RNASE[3],norm_mean_frxn19_RNASE[3],norm_mean_frxn20_RNASE[3],norm_mean_frxn21_RNASE[3],norm_mean_frxn22_RNASE[3],norm_mean_frxn23_RNASE[3],norm_mean_frxn24_RNASE[3],norm_mean_frxn25_RNASE[3])
View(norm.ctrl1)
norm_mean_frxn_CTRL <- lapply(avg.tables.CTRL, function(vec) {
norm_factor <- norm_fact(vec)
norm_factor / vec
})
print(norm_mean_frxn_CTRL[[1, 1]])
norm_mean_frxn_CTRL <- lapply(avg.tables.CTRL, function(vec) {
norm_factor <- norm_fact(vec)
norm_factor / vec
})
print(norm_mean_frxn_CTRL[[1,1]])
norm_mean_frxn_CTRL <- lapply(avg.tables.CTRL, function(vec) {
norm_factor <- norm_fact(vec)
norm_factor / vec
})
print(norm_mean_frxn_CTRL[[1;1]])
norm_mean_frxn_CTRL <- lapply(avg.tables.CTRL, function(vec) {
norm_factor <- norm_fact(vec)
norm_factor / vec
})
print(norm_mean_frxn_CTRL[[1]])
norm_mean_frxn_CTRL <- lapply(avg.tables.CTRL, function(vec) {
norm_factor <- norm_fact(vec)
norm_factor / vec
})
print(norm_mean_frxn_CTRL[[1]][1])
# Define subtables for each treatment and each replicate
data.ctrl1 <- data$levels_fraction =="Ctrl_Rep1"
data.ctrl2 <- data$levels_fraction =="Ctrl_Rep2"
data.ctrl3 <- data$levels_fraction =="Ctrl_Rep3"
data.rnase1 <- data$levels_fraction =="RNase_Rep1"
data.rnase2 <- data$levels_fraction =="RNase_Rep2"
data.rnase3 <- data$clevels_fraction =="RNase_Rep3"
View(data.ctrl1)
# Define subtables for each treatment and each replicate
data.ctrl1 <- data$levels_fraction =="Ctrl_Rep1"
data.ctrl2 <- data$levels_fraction =="Ctrl_Rep2"
data.ctrl3 <- data$levels_fraction =="Ctrl_Rep3"
data.rnase1 <- data$levels_fraction =="RNase_Rep1"
data.rnase2 <- data$levels_fraction =="RNase_Rep2"
data.rnase3 <- data$clevels_fraction =="RNase_Rep3"
print(data.ctrl1)
# Normalization step, fraction-wise
table.ctrl1 <- data.frame(mapply('*', NS_Table[,data.ctrl1], norm.ctrl1, SIMPLIFY=FALSE))
table.ctrl2 <- data.frame(mapply('*', NS_Table[,data.ctrl2], norm.ctrl2, SIMPLIFY=FALSE))
table.ctrl3 <- data.frame(mapply('*', NS_Table[,data.ctrl3], norm.ctrl3, SIMPLIFY=FALSE))
table.rnase1 <- data.frame(mapply('*', NS_Table[,data.rnase1], norm.rnase1, SIMPLIFY=FALSE))
table.rnase2 <- data.frame(mapply('*', NS_Table[,data.rnase2], norm.rnase2, SIMPLIFY=FALSE))
table.rnase3 <- data.frame(mapply('*', NS_Table[,data.rnase3], norm.rnase3, SIMPLIFY=FALSE))
View(table.ctrl1)
# Define subtables for each treatment and each replicate
data.ctrl1 <- data$levels_fraction =="Ctrl_Rep1"
data.ctrl2 <- data$levels_fraction =="Ctrl_Rep2"
data.ctrl3 <- data$levels_fraction =="Ctrl_Rep3"
data.rnase1 <- data$levels_fraction =="RNase_Rep1"
data.rnase2 <- data$levels_fraction =="RNase_Rep2"
data.rnase3 <- data$clevels_fraction =="RNase_Rep3"
print(data.ctrl1)
# Normalization step, fraction-wise
table.ctrl1 <- data.frame(mapply('*', NS_Table[,data.ctrl1], norm.ctrl1, SIMPLIFY=FALSE))
table.ctrl2 <- data.frame(mapply('*', NS_Table[,data.ctrl2], norm.ctrl2, SIMPLIFY=FALSE))
table.ctrl3 <- data.frame(mapply('*', NS_Table[,data.ctrl3], norm.ctrl3, SIMPLIFY=FALSE))
table.rnase1 <- data.frame(mapply('*', NS_Table[,data.rnase1], norm.rnase1, SIMPLIFY=FALSE))
table.rnase2 <- data.frame(mapply('*', NS_Table[,data.rnase2], norm.rnase2, SIMPLIFY=FALSE))
table.rnase3 <- data.frame(mapply('*', NS_Table[,data.rnase3], norm.rnase3, SIMPLIFY=FALSE))
View(table.ctrl1)
# Normalization step, fraction-wise
table.ctrl1 <- data.frame(mapply('*', NS_Table[,data.ctrl1], norm.ctrl1, SIMPLIFY=FALSE))
table.ctrl2 <- data.frame(mapply('*', NS_Table[,data.ctrl2], norm.ctrl2, SIMPLIFY=FALSE))
table.ctrl3 <- data.frame(mapply('*', NS_Table[,data.ctrl3], norm.ctrl3, SIMPLIFY=FALSE))
table.rnase1 <- data.frame(mapply('*', NS_Table[,data.rnase1], norm.rnase1, SIMPLIFY=FALSE))
table.rnase2 <- data.frame(mapply('*', NS_Table[,data.rnase2], norm.rnase2, SIMPLIFY=FALSE))
table.rnase3 <- data.frame(mapply('*', NS_Table[,data.rnase3], norm.rnase3, SIMPLIFY=FALSE))
# Get the proper rownames for the tables
rownames(table.ctrl1) <- row_names
norm_mean_frxn_CTRL <- lapply(avg.tables.CTRL, function(vec) {
norm_factor <- norm_fact(vec)
norm_factor / vec
})
print(norm_mean_frxn_CTRL[[1]][1])
# Normierungsvektoren fÃ¼r CTRL, Replikat 1â3
norm.ctrl1 <- sapply(norm_mean_frxn_CTRL, function(x) x[1])
norm.ctrl2 <- sapply(norm_mean_frxn_CTRL, function(x) x[2])
norm.ctrl3 <- sapply(norm_mean_frxn_CTRL, function(x) x[3])
# Und genauso fÃ¼r RNASE
norm.rnase1 <- sapply(norm_mean_frxn_RNASE, function(x) x[1])
norm_mean_frxn_CTRL <- lapply(avg.tables.CTRL, function(vec) {
norm_factor <- norm_fact(vec)
norm_factor / vec
})
norm_mean_frxn_RNASE <- lapply(avg.tables.RNASE, function(vec) {
norm_factor <- norm_fact(vec)
norm_factor / vec
})
print(norm_mean_frxn_CTRL[[1]][1])
# Normierungsvektoren fÃ¼r CTRL, Replikat 1â3
norm.ctrl1 <- sapply(norm_mean_frxn_CTRL, function(x) x[1])
norm.ctrl2 <- sapply(norm_mean_frxn_CTRL, function(x) x[2])
norm.ctrl3 <- sapply(norm_mean_frxn_CTRL, function(x) x[3])
# Und genauso fÃ¼r RNASE
norm.rnase1 <- sapply(norm_mean_frxn_RNASE, function(x) x[1])
norm.rnase2 <- sapply(norm_mean_frxn_RNASE, function(x) x[2])
norm.rnase3 <- sapply(norm_mean_frxn_RNASE, function(x) x[3])
# Normierungsvektoren fÃ¼r CTRL, Replikat 1â3
norm.ctrl1 <- sapply(norm_mean_frxn_CTRL, function(x) x[1])
norm.ctrl2 <- sapply(norm_mean_frxn_CTRL, function(x) x[2])
norm.ctrl3 <- sapply(norm_mean_frxn_CTRL, function(x) x[3])
# Und genauso fÃ¼r RNASE
norm.rnase1 <- sapply(norm_mean_frxn_RNASE, function(x) x[1])
norm.rnase2 <- sapply(norm_mean_frxn_RNASE, function(x) x[2])
norm.rnase3 <- sapply(norm_mean_frxn_RNASE, function(x) x[3])
View(norm.rnase3)
norm_mean_frxn_CTRL <- lapply(avg.tables.CTRL, function(vec) {
norm_factor <- norm_fact(vec)
norm_factor / vec
})
norm_mean_frxn_RNASE <- lapply(avg.tables.RNASE, function(vec) {
norm_factor <- norm_fact(vec)
norm_factor / vec
})
print(norm_mean_frxn_CTRL[[1]])
# Compute vectors containing the normalization factors for the respective treatment and replicates and fractions 1 to 25
# Korrekturfaktor fÃ¼r die overall Proteinmenge?!
norm.ctrl1 <- c(norm_mean_frxn1_CTRL[1],norm_mean_frxn2_CTRL[1],norm_mean_frxn3_CTRL[1],norm_mean_frxn4_CTRL[1],norm_mean_frxn5_CTRL[1],norm_mean_frxn6_CTRL[1],norm_mean_frxn7_CTRL[1],norm_mean_frxn8_CTRL[1],norm_mean_frxn9_CTRL[1],norm_mean_frxn10_CTRL[1],norm_mean_frxn11_CTRL[1],norm_mean_frxn12_CTRL[1],norm_mean_frxn13_CTRL[1],norm_mean_frxn14_CTRL[1],norm_mean_frxn15_CTRL[1],norm_mean_frxn16_CTRL[1],norm_mean_frxn17_CTRL[1],norm_mean_frxn18_CTRL[1],norm_mean_frxn19_CTRL[1],norm_mean_frxn20_CTRL[1],norm_mean_frxn21_CTRL[1],norm_mean_frxn22_CTRL[1],norm_mean_frxn23_CTRL[1],norm_mean_frxn24_CTRL[1],norm_mean_frxn25_CTRL[1])
norm.ctrl2 <- c(norm_mean_frxn1_CTRL[2],norm_mean_frxn2_CTRL[2],norm_mean_frxn3_CTRL[2],norm_mean_frxn4_CTRL[2],norm_mean_frxn5_CTRL[2],norm_mean_frxn6_CTRL[2],norm_mean_frxn7_CTRL[2],norm_mean_frxn8_CTRL[2],norm_mean_frxn9_CTRL[2],norm_mean_frxn10_CTRL[2],norm_mean_frxn11_CTRL[2],norm_mean_frxn12_CTRL[2],norm_mean_frxn13_CTRL[2],norm_mean_frxn14_CTRL[2],norm_mean_frxn15_CTRL[2],norm_mean_frxn16_CTRL[2],norm_mean_frxn17_CTRL[2],norm_mean_frxn18_CTRL[2],norm_mean_frxn19_CTRL[2],norm_mean_frxn20_CTRL[2],norm_mean_frxn21_CTRL[2],norm_mean_frxn22_CTRL[2],norm_mean_frxn23_CTRL[2],norm_mean_frxn24_CTRL[2],norm_mean_frxn25_CTRL[2])
norm.ctrl3 <- c(norm_mean_frxn1_CTRL[3],norm_mean_frxn2_CTRL[3],norm_mean_frxn3_CTRL[3],norm_mean_frxn4_CTRL[3],norm_mean_frxn5_CTRL[3],norm_mean_frxn6_CTRL[3],norm_mean_frxn7_CTRL[3],norm_mean_frxn8_CTRL[3],norm_mean_frxn9_CTRL[3],norm_mean_frxn10_CTRL[3],norm_mean_frxn11_CTRL[3],norm_mean_frxn12_CTRL[3],norm_mean_frxn13_CTRL[3],norm_mean_frxn14_CTRL[3],norm_mean_frxn15_CTRL[3],norm_mean_frxn16_CTRL[3],norm_mean_frxn17_CTRL[3],norm_mean_frxn18_CTRL[3],norm_mean_frxn19_CTRL[3],norm_mean_frxn20_CTRL[3],norm_mean_frxn21_CTRL[3],norm_mean_frxn22_CTRL[3],norm_mean_frxn23_CTRL[3],norm_mean_frxn24_CTRL[3],norm_mean_frxn25_CTRL[3])
norm.rnase1 <- c(norm_mean_frxn1_RNASE[1],norm_mean_frxn2_RNASE[1],norm_mean_frxn3_RNASE[1],norm_mean_frxn4_RNASE[1],norm_mean_frxn5_RNASE[1],norm_mean_frxn6_RNASE[1],norm_mean_frxn7_RNASE[1],norm_mean_frxn8_RNASE[1],norm_mean_frxn9_RNASE[1],norm_mean_frxn10_RNASE[1],norm_mean_frxn11_RNASE[1],norm_mean_frxn12_RNASE[1],norm_mean_frxn13_RNASE[1],norm_mean_frxn14_RNASE[1],norm_mean_frxn15_RNASE[1],norm_mean_frxn16_RNASE[1],norm_mean_frxn17_RNASE[1],norm_mean_frxn18_RNASE[1],norm_mean_frxn19_RNASE[1],norm_mean_frxn20_RNASE[1],norm_mean_frxn21_RNASE[1],norm_mean_frxn22_RNASE[1],norm_mean_frxn23_RNASE[1],norm_mean_frxn24_RNASE[1],norm_mean_frxn25_RNASE[1])
norm.rnase2 <- c(norm_mean_frxn1_RNASE[2],norm_mean_frxn2_RNASE[2],norm_mean_frxn3_RNASE[2],norm_mean_frxn4_RNASE[2],norm_mean_frxn5_RNASE[2],norm_mean_frxn6_RNASE[2],norm_mean_frxn7_RNASE[2],norm_mean_frxn8_RNASE[2],norm_mean_frxn9_RNASE[2],norm_mean_frxn10_RNASE[2],norm_mean_frxn11_RNASE[2],norm_mean_frxn12_RNASE[2],norm_mean_frxn13_RNASE[2],norm_mean_frxn14_RNASE[2],norm_mean_frxn15_RNASE[2],norm_mean_frxn16_RNASE[2],norm_mean_frxn17_RNASE[2],norm_mean_frxn18_RNASE[2],norm_mean_frxn19_RNASE[2],norm_mean_frxn20_RNASE[2],norm_mean_frxn21_RNASE[2],norm_mean_frxn22_RNASE[2],norm_mean_frxn23_RNASE[2],norm_mean_frxn24_RNASE[2],norm_mean_frxn25_RNASE[2])
norm.rnase3 <- c(norm_mean_frxn1_RNASE[3],norm_mean_frxn2_RNASE[3],norm_mean_frxn3_RNASE[3],norm_mean_frxn4_RNASE[3],norm_mean_frxn5_RNASE[3],norm_mean_frxn6_RNASE[3],norm_mean_frxn7_RNASE[3],norm_mean_frxn8_RNASE[3],norm_mean_frxn9_RNASE[3],norm_mean_frxn10_RNASE[3],norm_mean_frxn11_RNASE[3],norm_mean_frxn12_RNASE[3],norm_mean_frxn13_RNASE[3],norm_mean_frxn14_RNASE[3],norm_mean_frxn15_RNASE[3],norm_mean_frxn16_RNASE[3],norm_mean_frxn17_RNASE[3],norm_mean_frxn18_RNASE[3],norm_mean_frxn19_RNASE[3],norm_mean_frxn20_RNASE[3],norm_mean_frxn21_RNASE[3],norm_mean_frxn22_RNASE[3],norm_mean_frxn23_RNASE[3],norm_mean_frxn24_RNASE[3],norm_mean_frxn25_RNASE[3])
# Define subtables for each treatment and each replicate
data.ctrl1 <- data$condition =="Ctrl_Rep1"
data.ctrl2 <- data$condition =="Ctrl_Rep2"
data.ctrl3 <- data$condition =="Ctrl_Rep3"
data.rnase1 <- data$condition =="RNase_Rep1"
data.rnase2 <- data$condition =="RNase_Rep2"
data.rnase3 <- data$condition =="RNase_Rep3"
# Define subtables for each treatment and each replicate
data.ctrl1 <- data$condition =="Ctrl_Rep1"
data.ctrl2 <- data$condition =="Ctrl_Rep2"
data.ctrl3 <- data$condition =="Ctrl_Rep3"
data.rnase1 <- data$condition =="RNase_Rep1"
data.rnase2 <- data$condition =="RNase_Rep2"
data.rnase3 <- data$condition =="RNase_Rep3"
View(data.ctrl1)
# Define subtables for each treatment and each replicate
data.ctrl1 <- data$levels_fraction =="Ctrl_Rep1"
data.ctrl2 <- data$levels_fraction =="Ctrl_Rep2"
data.ctrl3 <- data$levels_fraction =="Ctrl_Rep3"
data.rnase1 <- data$levels_fraction =="RNase_Rep1"
data.rnase2 <- data$levels_fraction =="RNase_Rep2"
data.rnase3 <- data$clevels_fraction =="RNase_Rep3"
# Define subtables for each treatment and each replicate
data.ctrl1 <- data$levels_fraction =="Ctrl_Rep1"
data.ctrl2 <- data$levels_fraction =="Ctrl_Rep2"
data.ctrl3 <- data$levels_fraction =="Ctrl_Rep3"
data.rnase1 <- data$levels_fraction =="RNase_Rep1"
data.rnase2 <- data$levels_fraction =="RNase_Rep2"
data.rnase3 <- data$clevels_fraction =="RNase_Rep3"
View(data.ctrl1)
# Define subtables for each treatment and each replicate
data.ctrl1 <- data$condition =="Ctrl_Rep1"
data.ctrl2 <- data$condition =="Ctrl_Rep2"
data.ctrl3 <- data$condition =="Ctrl_Rep3"
data.rnase1 <- data$condition =="RNase_Rep1"
data.rnase2 <- data$condition =="RNase_Rep2"
data.rnase3 <- data$condition =="RNase_Rep3"
View(data.ctrl1)
data_split <- split(data, data$levels_fraction)
# Define subtables for each treatment and each replicate
data.ctrl1 <- colmns_sorted$levels_fraction =="Ctrl_Rep1"
data.ctrl2 <- colmns_sorted$levels_fraction =="Ctrl_Rep2"
data.ctrl3 <- colmns_sorted$levels_fraction =="Ctrl_Rep3"
data.rnase1 <- colmns_sorted$levels_fraction =="RNase_Rep1"
data.rnase2 <- colmns_sorted$levels_fraction =="RNase_Rep2"
data.rnase3 <- colmns_sorted$clevels_fraction =="RNase_Rep3"
View(data.ctrl1)
data_split <- split(colmns_sorted, colmns_sorted$levels_fraction)
View(data_split[[1]])
data_split <- split(colmns_sorted, colmns_sorted$levels_fraction)
View(data_split[[1]])
data_split$Ctrl_Rep1
data.ctrl1 <- colmns_sorted$levels_fraction =="Ctrl_Rep1"
data.ctrl2 <- colmns_sorted$levels_fraction =="Ctrl_Rep2"
data.ctrl3 <- colmns_sorted$levels_fraction =="Ctrl_Rep3"
data.rnase1 <- colmns_sorted$levels_fraction =="RNase_Rep1"
data.rnase2 <- colmns_sorted$levels_fraction =="RNase_Rep2"
data.rnase3 <- colmns_sorted$levels_fraction =="RNase_Rep3"
View(data.ctrl1)
# Get the proper rownames for the tables
rownames(table.ctrl1) <- row_names
# Normalization step, fraction-wise
table.ctrl1 <- data.frame(mapply('*', NS_Table[,data.ctrl1], norm.ctrl1, SIMPLIFY=FALSE))
table.ctrl2 <- data.frame(mapply('*', NS_Table[,data.ctrl2], norm.ctrl2, SIMPLIFY=FALSE))
table.ctrl3 <- data.frame(mapply('*', NS_Table[,data.ctrl3], norm.ctrl3, SIMPLIFY=FALSE))
table.rnase1 <- data.frame(mapply('*', NS_Table[,data.rnase1], norm.rnase1, SIMPLIFY=FALSE))
table.rnase2 <- data.frame(mapply('*', NS_Table[,data.rnase2], norm.rnase2, SIMPLIFY=FALSE))
table.rnase3 <- data.frame(mapply('*', NS_Table[,data.rnase3], norm.rnase3, SIMPLIFY=FALSE))
# Get the proper rownames for the tables
rownames(table.ctrl1) <- row_names
rownames(table.ctrl2) <- row_names
rownames(table.ctrl3) <- row_names
rownames(table.rnase1) <- row_names
rownames(table.rnase2) <- row_names
rownames(table.rnase3) <- row_names
# Get the proper rownames for the tables
rownames(table.ctrl1) <- row_names
rownames(table.ctrl2) <- row_names
rownames(table.ctrl3) <- row_names
rownames(table.rnase1) <- row_names
rownames(table.rnase2) <- row_names
rownames(table.rnase3) <- row_names
View(data.ctrl1)
# Get the proper rownames for the tables
rownames(table.ctrl1) <- row_names
rownames(table.ctrl2) <- row_names
rownames(table.ctrl3) <- row_names
rownames(table.rnase1) <- row_names
rownames(table.rnase2) <- row_names
rownames(table.rnase3) <- row_names
View(table.ctrl1)
#### Apply a sliding window/moving average of 3 points to the data ####
table.ctrl1.SW <- data.frame(table.ctrl1[1],(table.ctrl1[1:23]+table.ctrl1[2:24]+table.ctrl1[3:25])/3,table.ctrl1[25])
table.ctrl2.SW <- data.frame(table.ctrl2[1],(table.ctrl2[1:23]+table.ctrl2[2:24]+table.ctrl2[3:25])/3,table.ctrl2[25])
table.ctrl3.SW <- data.frame(table.ctrl3[1],(table.ctrl3[1:23]+table.ctrl3[2:24]+table.ctrl3[3:25])/3,table.ctrl3[25])
table.rnase1.SW <- data.frame(table.rnase1[1],(table.rnase1[1:23]+table.rnase1[2:24]+table.rnase1[3:25])/3,table.rnase1[25])
table.rnase2.SW <- data.frame(table.rnase2[1],(table.rnase2[1:23]+table.rnase2[2:24]+table.rnase2[3:25])/3,table.rnase2[25])
table.rnase3.SW <- data.frame(table.rnase3[1],(table.rnase3[1:23]+table.rnase3[2:24]+table.rnase3[3:25])/3,table.rnase3[25])
View(table.ctrl1.SW)
#### Apply a sliding window/moving average of 3 points to the data ####
table.ctrl1.SW <- data.frame(table.ctrl1[1],(table.ctrl1[1:23]+table.ctrl1[2:24]+table.ctrl1[3:25])/3,table.ctrl1[25])
table.ctrl2.SW <- data.frame(table.ctrl2[1],(table.ctrl2[1:23]+table.ctrl2[2:24]+table.ctrl2[3:25])/3,table.ctrl2[25])
table.ctrl3.SW <- data.frame(table.ctrl3[1],(table.ctrl3[1:23]+table.ctrl3[2:24]+table.ctrl3[3:25])/3,table.ctrl3[25])
table.rnase1.SW <- data.frame(table.rnase1[1],(table.rnase1[1:23]+table.rnase1[2:24]+table.rnase1[3:25])/3,table.rnase1[25])
table.rnase2.SW <- data.frame(table.rnase2[1],(table.rnase2[1:23]+table.rnase2[2:24]+table.rnase2[3:25])/3,table.rnase2[25])
table.rnase3.SW <- data.frame(table.rnase3[1],(table.rnase3[1:23]+table.rnase3[2:24]+table.rnase3[3:25])/3,table.rnase3[25])
# Get the proper rownames for the tables
colnames(table.ctrl1.SW) <- colnames(table.ctrl1)
colnames(table.ctrl2.SW) <- colnames(table.ctrl2)
colnames(table.ctrl3.SW) <- colnames(table.ctrl3)
colnames(table.rnase1.SW) <- colnames(table.rnase1)
colnames(table.rnase2.SW) <- colnames(table.rnase2)
colnames(table.rnase3.SW) <- colnames(table.rnase3)
View(table.ctrl1.SW)
# Hilfsfunktion: multipliziert Spalten von NS_Table mit den jeweiligen Normfaktoren
normalize_group <- function(mask, norm_vec) {
selected <- NS_Table[, mask]                  # Spalten fÃ¼r die jeweilige Gruppe
as.data.frame(mapply(`*`, selected, norm_vec, SIMPLIFY = FALSE))  # Elementweise Multiplikation
}
# Anwendung auf alle Gruppen
table.ctrl1  <- normalize_group(data.ctrl1,  norm.ctrl1)
table.ctrl2  <- normalize_group(data.ctrl2,  norm.ctrl2)
table.ctrl3  <- normalize_group(data.ctrl3,  norm.ctrl3)
table.rnase1 <- normalize_group(data.rnase1, norm.rnase1)
table.rnase2 <- normalize_group(data.rnase2, norm.rnase2)
table.rnase3 <- normalize_group(data.rnase3, norm.rnase3)
View(table.ctrl1)
# Normalization step, fraction-wise
table.ctrl1 <- data.frame(mapply('*', NS_Table[,data.ctrl1], norm.ctrl1, SIMPLIFY=FALSE))
table.ctrl2 <- data.frame(mapply('*', NS_Table[,data.ctrl2], norm.ctrl2, SIMPLIFY=FALSE))
table.ctrl3 <- data.frame(mapply('*', NS_Table[,data.ctrl3], norm.ctrl3, SIMPLIFY=FALSE))
table.rnase1 <- data.frame(mapply('*', NS_Table[,data.rnase1], norm.rnase1, SIMPLIFY=FALSE))
table.rnase2 <- data.frame(mapply('*', NS_Table[,data.rnase2], norm.rnase2, SIMPLIFY=FALSE))
table.rnase3 <- data.frame(mapply('*', NS_Table[,data.rnase3], norm.rnase3, SIMPLIFY=FALSE))
View(table.ctrl1)
# Hilfsfunktion: multipliziert Spalten von NS_Table mit den jeweiligen Normfaktoren
normalize_group <- function(mask, norm_vec) {
selected <- NS_Table[, mask]                  # Spalten fÃ¼r die jeweilige Gruppe
as.data.frame(mapply(`*`, selected, norm_vec, SIMPLIFY = FALSE))  # Elementweise Multiplikation
}
# Anwendung auf alle Gruppen
table.ctrl11  <- normalize_group(data.ctrl1,  norm.ctrl1)
table.ctrl2  <- normalize_group(data.ctrl2,  norm.ctrl2)
table.ctrl3  <- normalize_group(data.ctrl3,  norm.ctrl3)
table.rnase1 <- normalize_group(data.rnase1, norm.rnase1)
table.rnase2 <- normalize_group(data.rnase2, norm.rnase2)
table.rnase3 <- normalize_group(data.rnase3, norm.rnase3)
View(table.ctrl11)
rownames(table.ctrl11) <- row_names
rownames(table.ctrl2) <- row_names
rownames(table.ctrl3) <- row_names
rownames(table.rnase1) <- row_names
rownames(table.rnase2) <- row_names
rownames(table.rnase3) <- row_names
View(table.ctrl11)
# Get the proper rownames for the tables
rownames(table.ctrl1) <- row_names
rownames(table.ctrl2) <- row_names
rownames(table.ctrl3) <- row_names
rownames(table.rnase1) <- row_names
rownames(table.rnase2) <- row_names
rownames(table.rnase3) <- row_names
View(table.ctrl1)
norm_mean_frxn_CTRL <- lapply(avg.tables.CTRL, function(vec) {
norm_factor <- norm_fact(vec)
norm_factor / vec
})
norm_mean_frxn_RNASE <- lapply(avg.tables.RNASE, function(vec) {
norm_factor <- norm_fact(vec)
norm_factor / vec
})
print(norm_mean_frxn_CTRL[[1]])
# Compute vectors containing the normalization factors for the respective treatment and replicates and fractions 1 to 25
# Korrekturfaktor fÃ¼r die overall Proteinmenge?!
norm.ctrl1 <- c(norm_mean_frxn1_CTRL[1],norm_mean_frxn2_CTRL[1],norm_mean_frxn3_CTRL[1],norm_mean_frxn4_CTRL[1],norm_mean_frxn5_CTRL[1],norm_mean_frxn6_CTRL[1],norm_mean_frxn7_CTRL[1],norm_mean_frxn8_CTRL[1],norm_mean_frxn9_CTRL[1],norm_mean_frxn10_CTRL[1],norm_mean_frxn11_CTRL[1],norm_mean_frxn12_CTRL[1],norm_mean_frxn13_CTRL[1],norm_mean_frxn14_CTRL[1],norm_mean_frxn15_CTRL[1],norm_mean_frxn16_CTRL[1],norm_mean_frxn17_CTRL[1],norm_mean_frxn18_CTRL[1],norm_mean_frxn19_CTRL[1],norm_mean_frxn20_CTRL[1],norm_mean_frxn21_CTRL[1],norm_mean_frxn22_CTRL[1],norm_mean_frxn23_CTRL[1],norm_mean_frxn24_CTRL[1],norm_mean_frxn25_CTRL[1])
norm.ctrl2 <- c(norm_mean_frxn1_CTRL[2],norm_mean_frxn2_CTRL[2],norm_mean_frxn3_CTRL[2],norm_mean_frxn4_CTRL[2],norm_mean_frxn5_CTRL[2],norm_mean_frxn6_CTRL[2],norm_mean_frxn7_CTRL[2],norm_mean_frxn8_CTRL[2],norm_mean_frxn9_CTRL[2],norm_mean_frxn10_CTRL[2],norm_mean_frxn11_CTRL[2],norm_mean_frxn12_CTRL[2],norm_mean_frxn13_CTRL[2],norm_mean_frxn14_CTRL[2],norm_mean_frxn15_CTRL[2],norm_mean_frxn16_CTRL[2],norm_mean_frxn17_CTRL[2],norm_mean_frxn18_CTRL[2],norm_mean_frxn19_CTRL[2],norm_mean_frxn20_CTRL[2],norm_mean_frxn21_CTRL[2],norm_mean_frxn22_CTRL[2],norm_mean_frxn23_CTRL[2],norm_mean_frxn24_CTRL[2],norm_mean_frxn25_CTRL[2])
norm.ctrl3 <- c(norm_mean_frxn1_CTRL[3],norm_mean_frxn2_CTRL[3],norm_mean_frxn3_CTRL[3],norm_mean_frxn4_CTRL[3],norm_mean_frxn5_CTRL[3],norm_mean_frxn6_CTRL[3],norm_mean_frxn7_CTRL[3],norm_mean_frxn8_CTRL[3],norm_mean_frxn9_CTRL[3],norm_mean_frxn10_CTRL[3],norm_mean_frxn11_CTRL[3],norm_mean_frxn12_CTRL[3],norm_mean_frxn13_CTRL[3],norm_mean_frxn14_CTRL[3],norm_mean_frxn15_CTRL[3],norm_mean_frxn16_CTRL[3],norm_mean_frxn17_CTRL[3],norm_mean_frxn18_CTRL[3],norm_mean_frxn19_CTRL[3],norm_mean_frxn20_CTRL[3],norm_mean_frxn21_CTRL[3],norm_mean_frxn22_CTRL[3],norm_mean_frxn23_CTRL[3],norm_mean_frxn24_CTRL[3],norm_mean_frxn25_CTRL[3])
norm.rnase1 <- c(norm_mean_frxn1_RNASE[1],norm_mean_frxn2_RNASE[1],norm_mean_frxn3_RNASE[1],norm_mean_frxn4_RNASE[1],norm_mean_frxn5_RNASE[1],norm_mean_frxn6_RNASE[1],norm_mean_frxn7_RNASE[1],norm_mean_frxn8_RNASE[1],norm_mean_frxn9_RNASE[1],norm_mean_frxn10_RNASE[1],norm_mean_frxn11_RNASE[1],norm_mean_frxn12_RNASE[1],norm_mean_frxn13_RNASE[1],norm_mean_frxn14_RNASE[1],norm_mean_frxn15_RNASE[1],norm_mean_frxn16_RNASE[1],norm_mean_frxn17_RNASE[1],norm_mean_frxn18_RNASE[1],norm_mean_frxn19_RNASE[1],norm_mean_frxn20_RNASE[1],norm_mean_frxn21_RNASE[1],norm_mean_frxn22_RNASE[1],norm_mean_frxn23_RNASE[1],norm_mean_frxn24_RNASE[1],norm_mean_frxn25_RNASE[1])
norm.rnase2 <- c(norm_mean_frxn1_RNASE[2],norm_mean_frxn2_RNASE[2],norm_mean_frxn3_RNASE[2],norm_mean_frxn4_RNASE[2],norm_mean_frxn5_RNASE[2],norm_mean_frxn6_RNASE[2],norm_mean_frxn7_RNASE[2],norm_mean_frxn8_RNASE[2],norm_mean_frxn9_RNASE[2],norm_mean_frxn10_RNASE[2],norm_mean_frxn11_RNASE[2],norm_mean_frxn12_RNASE[2],norm_mean_frxn13_RNASE[2],norm_mean_frxn14_RNASE[2],norm_mean_frxn15_RNASE[2],norm_mean_frxn16_RNASE[2],norm_mean_frxn17_RNASE[2],norm_mean_frxn18_RNASE[2],norm_mean_frxn19_RNASE[2],norm_mean_frxn20_RNASE[2],norm_mean_frxn21_RNASE[2],norm_mean_frxn22_RNASE[2],norm_mean_frxn23_RNASE[2],norm_mean_frxn24_RNASE[2],norm_mean_frxn25_RNASE[2])
norm.rnase3 <- c(norm_mean_frxn1_RNASE[3],norm_mean_frxn2_RNASE[3],norm_mean_frxn3_RNASE[3],norm_mean_frxn4_RNASE[3],norm_mean_frxn5_RNASE[3],norm_mean_frxn6_RNASE[3],norm_mean_frxn7_RNASE[3],norm_mean_frxn8_RNASE[3],norm_mean_frxn9_RNASE[3],norm_mean_frxn10_RNASE[3],norm_mean_frxn11_RNASE[3],norm_mean_frxn12_RNASE[3],norm_mean_frxn13_RNASE[3],norm_mean_frxn14_RNASE[3],norm_mean_frxn15_RNASE[3],norm_mean_frxn16_RNASE[3],norm_mean_frxn17_RNASE[3],norm_mean_frxn18_RNASE[3],norm_mean_frxn19_RNASE[3],norm_mean_frxn20_RNASE[3],norm_mean_frxn21_RNASE[3],norm_mean_frxn22_RNASE[3],norm_mean_frxn23_RNASE[3],norm_mean_frxn24_RNASE[3],norm_mean_frxn25_RNASE[3])
View(norm.ctrl1)
# Compute vectors containing the normalization factors for the respective treatment and replicates and fractions 1 to 25
# Korrekturfaktor fÃ¼r die overall Proteinmenge?!
# Normierungsvektoren fÃ¼r CTRL, Replikat 1â3
norm.ctrl1 <- sapply(norm_mean_frxn_CTRL, function(x) x[1])
norm.ctrl2 <- sapply(norm_mean_frxn_CTRL, function(x) x[2])
norm.ctrl3 <- sapply(norm_mean_frxn_CTRL, function(x) x[3])
# Und genauso fÃ¼r RNASE
norm.rnase1 <- sapply(norm_mean_frxn_RNASE, function(x) x[1])
norm.rnase2 <- sapply(norm_mean_frxn_RNASE, function(x) x[2])
norm.rnase3 <- sapply(norm_mean_frxn_RNASE, function(x) x[3])
View(norm.ctrl1)
#ChatgPT bekommt das nicht kÃ¼zer geschrieben, deshalb wÃ¼rde ichs behalten
# Define subtables for each treatment and each replicate
data.ctrl1 <- colmns_sorted$levels_fraction =="Ctrl_Rep1"
data.ctrl2 <- colmns_sorted$levels_fraction =="Ctrl_Rep2"
data.ctrl3 <- colmns_sorted$levels_fraction =="Ctrl_Rep3"
data.rnase1 <- colmns_sorted$levels_fraction =="RNase_Rep1"
data.rnase2 <- colmns_sorted$levels_fraction =="RNase_Rep2"
data.rnase3 <- colmns_sorted$levels_fraction =="RNase_Rep3"
# Normalization step, fraction-wise
# Hilfsfunktion: multipliziert Spalten von NS_Table mit den jeweiligen Normfaktoren
normalize_group <- function(mask, norm_vec) {
selected <- NS_Table[, mask]                  # Spalten fÃ¼r die jeweilige Gruppe
as.data.frame(mapply(`*`, selected, norm_vec, SIMPLIFY = FALSE))  # Elementweise Multiplikation
}
# Anwendung auf alle Gruppen
table.ctrl1  <- normalize_group(data.ctrl1,  norm.ctrl1)
table.ctrl2  <- normalize_group(data.ctrl2,  norm.ctrl2)
table.ctrl3  <- normalize_group(data.ctrl3,  norm.ctrl3)
table.rnase1 <- normalize_group(data.rnase1, norm.rnase1)
table.rnase2 <- normalize_group(data.rnase2, norm.rnase2)
table.rnase3 <- normalize_group(data.rnase3, norm.rnase3)
#ChatgPT bekommt das nicht kÃ¼zer geschrieben, deshalb wÃ¼rde ichs behalten
# Get the proper rownames for the tables
rownames(table.ctrl1) <- row_names
rownames(table.ctrl2) <- row_names
rownames(table.ctrl3) <- row_names
rownames(table.rnase1) <- row_names
rownames(table.rnase2) <- row_names
rownames(table.rnase3) <- row_names
View(table.ctrl1)
# Define subtables for each treatment and each replicate
data.ctrl1 <- data$condition =="Ctrl_Rep1"
data.ctrl2 <- data$condition =="Ctrl_Rep2"
data.ctrl3 <- data$condition =="Ctrl_Rep3"
data.rnase1 <- data$condition =="RNase_Rep1"
data.rnase2 <- data$condition =="RNase_Rep2"
data.rnase3 <- data$condition =="RNase_Rep3"
View(data.ctrl1)
# Normalization step, fraction-wise
table.ctrl1 <- data.frame(mapply('*', NS_Table[,data.ctrl1], norm.ctrl1, SIMPLIFY=FALSE))
table.ctrl2 <- data.frame(mapply('*', NS_Table[,data.ctrl2], norm.ctrl2, SIMPLIFY=FALSE))
table.ctrl3 <- data.frame(mapply('*', NS_Table[,data.ctrl3], norm.ctrl3, SIMPLIFY=FALSE))
table.rnase1 <- data.frame(mapply('*', NS_Table[,data.rnase1], norm.rnase1, SIMPLIFY=FALSE))
table.rnase2 <- data.frame(mapply('*', NS_Table[,data.rnase2], norm.rnase2, SIMPLIFY=FALSE))
table.rnase3 <- data.frame(mapply('*', NS_Table[,data.rnase3], norm.rnase3, SIMPLIFY=FALSE))
View(table.ctrl1)
#ChatgPT bekommt das nicht kÃ¼zer geschrieben, deshalb wÃ¼rde ichs behalten
# Get the proper rownames for the tables
rownames(table.ctrl1) <- row_names
rownames(table.ctrl2) <- row_names
rownames(table.ctrl3) <- row_names
rownames(table.rnase1) <- row_names
rownames(table.rnase2) <- row_names
rownames(table.rnase3) <- row_names
View(table.ctrl1)
# Get the proper rownames for the tables
rownames(table.ctrl11) <- row_names
rownames(table.ctrl2) <- row_names
rownames(table.ctrl3) <- row_names
rownames(table.rnase1) <- row_names
rownames(table.rnase2) <- row_names
rownames(table.rnase3) <- row_names
View(table.ctrl11)
# Creation of a matrix with 6 rows and 25 columns. The matrix is filled by row from fraction1 to fraction25 so every column has one single fraction.
# sep="" compares the word fraction with the numbers 1 to 25 without a blank space.
# as.vector changes the created matrix into a vector with 150 elements sorted from 6 times fraction1 to 6 times fraction25
# paste("fraction",1:25,sep="")
fraction_names <- as.vector(matrix(rep(paste("fraction",1:25,sep=""),6), nrow = 6, ncol=25, byrow = TRUE))
View(matrix(rep(paste("fraction",1:25,sep=""),6), nrow = 6, ncol=25, byrow = TRUE))
View(fraction)
# Creation of a data frame with levels_CR, levels_fraction and fraction_names. This assigns every replicate of the factions (levels_fraction) to their fraction (fraction_names) and their kind of treatment, CRTL or RNASE (levels_CR).
colmns_sorted <- data.frame(row.names = colnames(NS_Table), levels_CR = levels_CR, levels_fraction = levels_fraction, fraction_names = fraction_names)
View(colmns_sorted)
#Check for missing values, there are none
anyNA(NS_Table)
#Muss noch ne neue ErklÃ¤rung hin, Code ist von mir (Ben) bzw ChatGPT
# Liste mit nur CTRL-Spalten fÃ¼r jede Fraktion
fraction.tables.CTRL <- lapply(selected_proteins, function(fx) {
cols <- rownames(subset(colmns_sorted, fraction_names == fx & levels_CR == "CTRL"))
NS_Table[, cols, drop = FALSE]
})
# Liste mit nur RNASE-Spalten fÃ¼r jede Fraktion
fraction.tables.RNASE <- lapply(selected_proteins, function(fx) {
cols <- rownames(subset(colmns_sorted, fraction_names == fx & levels_CR == "RNASE"))
NS_Table[, cols, drop = FALSE]})
names(fraction.tables.CTRL) <- selected_proteins
names(fraction.tables.RNASE) <- selected_proteins
View(fraction.tables.CTRL[["fraction3"]])
#Muss noch ne neue ErklÃ¤rung hin, Code ist von mir (Ben) bzw ChatGPT
avg.tables.CTRL <- lapply(fraction.tables.CTRL, function(df) {
sapply(df, mean)
})
avg.tables.RNASE <- lapply(fraction.tables.RNASE, function(df) {
sapply(df, mean)
})
avg.tables.CTRL[["fraction1"]]
avg.tables.RNASE[["fraction1"]]
# Determine average values for each treatment, each fraction and each replicate. Here, the values for the three replicates are stored in the same table
# Each vector contains the average protein value across all proteins for each of its 3 replicates.
avg.table.frxn1.CTRL <- sapply(table.frxn1.CTRL, function(x) mean(x))
avg.table.frxn2.CTRL <- sapply(table.frxn2.CTRL, function(x) mean(x))
avg.table.frxn3.CTRL <- sapply(table.frxn3.CTRL, function(x) mean(x))
avg.table.frxn4.CTRL <- sapply(table.frxn4.CTRL, function(x) mean(x))
avg.table.frxn5.CTRL <- sapply(table.frxn5.CTRL, function(x) mean(x))
avg.table.frxn6.CTRL <- sapply(table.frxn6.CTRL, function(x) mean(x))
avg.table.frxn7.CTRL <- sapply(table.frxn7.CTRL, function(x) mean(x))
avg.table.frxn8.CTRL <- sapply(table.frxn8.CTRL, function(x) mean(x))
avg.table.frxn9.CTRL <- sapply(table.frxn9.CTRL, function(x) mean(x))
avg.table.frxn10.CTRL <- sapply(table.frxn10.CTRL, function(x) mean(x))
avg.table.frxn11.CTRL <- sapply(table.frxn11.CTRL, function(x) mean(x))
avg.table.frxn12.CTRL <- sapply(table.frxn12.CTRL, function(x) mean(x))
avg.table.frxn13.CTRL <- sapply(table.frxn13.CTRL, function(x) mean(x))
avg.table.frxn14.CTRL <- sapply(table.frxn14.CTRL, function(x) mean(x))
avg.table.frxn15.CTRL <- sapply(table.frxn15.CTRL, function(x) mean(x))
avg.table.frxn16.CTRL <- sapply(table.frxn16.CTRL, function(x) mean(x))
avg.table.frxn17.CTRL <- sapply(table.frxn17.CTRL, function(x) mean(x))
avg.table.frxn18.CTRL <- sapply(table.frxn18.CTRL, function(x) mean(x))
avg.table.frxn19.CTRL <- sapply(table.frxn19.CTRL, function(x) mean(x))
avg.table.frxn20.CTRL <- sapply(table.frxn20.CTRL, function(x) mean(x))
avg.table.frxn21.CTRL <- sapply(table.frxn21.CTRL, function(x) mean(x))
avg.table.frxn22.CTRL <- sapply(table.frxn22.CTRL, function(x) mean(x))
avg.table.frxn23.CTRL <- sapply(table.frxn23.CTRL, function(x) mean(x))
avg.table.frxn24.CTRL <- sapply(table.frxn24.CTRL, function(x) mean(x))
avg.table.frxn25.CTRL <- sapply(table.frxn25.CTRL, function(x) mean(x))
avg.table.frxn1.RNASE <- sapply(table.frxn1.RNASE, function(x) mean(x))
avg.table.frxn2.RNASE <- sapply(table.frxn2.RNASE, function(x) mean(x))
avg.table.frxn3.RNASE <- sapply(table.frxn3.RNASE, function(x) mean(x))
avg.table.frxn4.RNASE <- sapply(table.frxn4.RNASE, function(x) mean(x))
avg.table.frxn5.RNASE <- sapply(table.frxn5.RNASE, function(x) mean(x))
avg.table.frxn6.RNASE <- sapply(table.frxn6.RNASE, function(x) mean(x))
avg.table.frxn7.RNASE <- sapply(table.frxn7.RNASE, function(x) mean(x))
avg.table.frxn8.RNASE <- sapply(table.frxn8.RNASE, function(x) mean(x))
avg.table.frxn9.RNASE <- sapply(table.frxn9.RNASE, function(x) mean(x))
avg.table.frxn10.RNASE <- sapply(table.frxn10.RNASE, function(x) mean(x))
avg.table.frxn11.RNASE <- sapply(table.frxn11.RNASE, function(x) mean(x))
avg.table.frxn12.RNASE <- sapply(table.frxn12.RNASE, function(x) mean(x))
avg.table.frxn13.RNASE <- sapply(table.frxn13.RNASE, function(x) mean(x))
avg.table.frxn14.RNASE <- sapply(table.frxn14.RNASE, function(x) mean(x))
avg.table.frxn15.RNASE <- sapply(table.frxn15.RNASE, function(x) mean(x))
avg.table.frxn16.RNASE <- sapply(table.frxn16.RNASE, function(x) mean(x))
avg.table.frxn17.RNASE <- sapply(table.frxn17.RNASE, function(x) mean(x))
avg.table.frxn18.RNASE <- sapply(table.frxn18.RNASE, function(x) mean(x))
avg.table.frxn19.RNASE <- sapply(table.frxn19.RNASE, function(x) mean(x))
avg.table.frxn20.RNASE <- sapply(table.frxn20.RNASE, function(x) mean(x))
avg.table.frxn21.RNASE <- sapply(table.frxn21.RNASE, function(x) mean(x))
avg.table.frxn22.RNASE <- sapply(table.frxn22.RNASE, function(x) mean(x))
avg.table.frxn23.RNASE <- sapply(table.frxn23.RNASE, function(x) mean(x))
avg.table.frxn24.RNASE <- sapply(table.frxn24.RNASE, function(x) mean(x))
avg.table.frxn25.RNASE <- sapply(table.frxn25.RNASE, function(x) mean(x))
View(avg.table.frxn1.CTRL)
